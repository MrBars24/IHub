{"version":3,"sources":["components/_datatable.js","components/_tabs.js","extensions/_parse.js","extensions/_value.js","pages/master.js"],"names":[],"mappingshxCA;AACA;AACA;AACA;AACA","file":"master.js","sourcesContent":["/**\r\n * datatable.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'datatable',\r\n\t\tdefaults = {\r\n\t\t\tsearchablePrefix: 'searchable',\r\n\t\t\torderablePrefix:  'orderable',\r\n\t\t\tlabelClass:       'cell-label',\r\n\t\t\tpagination:       true,\r\n\t\t\tpaginationBefore: '', // in case you need to move pagination element position next to element\r\n\t\t\t// Expecting: dataset, columns, row, modifyRow\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\t// Expected element: <div class=\"datatable\">\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $element = $(this.element);\r\n\r\n\t\t\t// orderable/searchable\r\n\t\t\t$(this.element).find('thead th').each(function(index) {\r\n\t\t\t\tvar $header = $(this);\r\n\t\t\t\tvar $cell = $header.addClass('cell');\r\n\t\t\t\tvar label = $($header.contents()[0]).text().trim();\r\n\t\t\t\tvar $label = $('<div></div>');\r\n\t\t\t\t$label.addClass(plugin.options.labelClass);\r\n\t\t\t\t$label.text(label);\r\n\t\t\t\tvar $orderable  = $header.find(':input[name^=' + plugin.options.orderablePrefix + ']');\r\n\t\t\t\tvar $searchable = $header.find(':input[name^=' + plugin.options.searchablePrefix + ']');\r\n\r\n\t\t\t\t// rebuild cell\r\n\t\t\t\t$header.text('');\r\n\t\t\t\t$cell.prepend($label);\r\n\t\t\t\t$cell.prepend($orderable);\r\n\t\t\t\t$cell.prepend($searchable);\r\n\r\n\t\t\t\t// wrap\r\n\t\t\t\tif($header.find(':input').length) {\r\n\t\t\t\t\tvar $filters = $('<div class=\"cell-filters\"></div>');\r\n\t\t\t\t\t$header.append($filters);\r\n\t\t\t\t\t$header.find(':input').appendTo($filters);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// insert order triggers\r\n\t\t\t\tif($orderable.length) {\r\n\t\t\t\t\t$label.addClass(plugin.options.orderablePrefix);\r\n\t\t\t\t\tvar name = $orderable.attr('name');\r\n\t\t\t\t\t$('<a class=\"order order-asc\" href=\"\" data-direction=\"asc\" data-variable=\"' + name + '\"><i class=\"fa fa-caret-up\"></i></a>').appendTo($cell);\r\n\t\t\t\t\t$('<a class=\"order order-desc\" href=\"\" data-direction=\"desc\" data-variable=\"' + name + '\"><i class=\"fa fa-caret-down\"></i></a>').appendTo($cell);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// insert search triggers\r\n\t\t\t\tif($searchable.length) {\r\n\t\t\t\t\t$label.addClass(plugin.options.searchablePrefix);\r\n\t\t\t\t\t$('<a class=\"search button toggle\"><i class=\"fa fa-search\"></i></a>').appendTo($cell);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add column classes\r\n\t\t\t\tvar column = plugin.options.columns[index] || '';\r\n\t\t\t\t$header.addClass(column);\r\n\t\t\t});\r\n\r\n\t\t\t// table header row: toggle searchable field\r\n\t\t\t$(this.element).on('click', 'thead th .button.search', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t$(this).parents('th').toggleClass(plugin.options.searchablePrefix + '-visible');\r\n\t\t\t\t$(this).parents('th').find(':input:visible').focus();\r\n\t\t\t});\r\n\r\n\t\t\t// table header row: hide searchable field\r\n\t\t\t$(this.element).on('blur', 'thead th :input', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t$(this).parents('th').removeClass(plugin.options.searchablePrefix + '-visible');\r\n\t\t\t});\r\n\r\n\t\t\t// table header row: order\r\n\t\t\t$(this.element).on('click', 'thead th .order', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// reset other orderables\r\n\t\t\t\t$element.find('input[name^=' + plugin.options.orderablePrefix + ']').val('');\r\n\r\n\t\t\t\tvar direction = $(this).data('direction');\r\n\t\t\t\t$(this).parents('th').find('input[name^=' + plugin.options.orderablePrefix + ']').val(direction);\r\n\t\t\t\tplugin.search(); // execute the actual search\r\n\t\t\t});\r\n\r\n\t\t\t// table header row for searchable columns\r\n\t\t\t// any <th> that has a \"searchable\" class, will then locate input field that will be used to search in data table\r\n\t\t\t$(this.element).on('input', 'thead th :input', function() {\r\n\r\n\t\t\t\t// Throttle search to only search after user stops typing\r\n\t\t\t\tvar waitTime = 200;\r\n\t\t\t\tif($element.data('autocomplete') !== null) {\r\n\t\t\t\t\tclearTimeout($element.data('autocomplete'));\r\n\t\t\t\t}\r\n\t\t\t\t// not fetching data\r\n\t\t\t\tif(!$element.hasClass('fetching-data')) {\r\n\t\t\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t\t\tplugin.search(); // execute the actual search\r\n\t\t\t\t\t\t$element.data('autocomplete', null);\r\n\t\t\t\t\t}, waitTime);\r\n\t\t\t\t\t$element.data('autocomplete', t);\r\n\t\t\t\t}\r\n\t\t\t\t// instant search\r\n\t\t\t\telse if(instant != undefined && instant == true) {\r\n\t\t\t\t\tplugin.search(); // execute the actual search\r\n\t\t\t\t\t$element.data('autocomplete', null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// pagination\r\n\t\t\t$(this.element).on('click', '.pagination a', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar page = $(this).attr('href').replace('?', '').replace('page=', '');\r\n\t\t\t\tplugin.search({ page: page }); // execute the actual search\r\n\t\t\t});\r\n\r\n\t\t\t// populate table\r\n\t\t\tif(this.options.dataset != undefined) {\r\n\t\t\t\tplugin.populate(this.options.dataset.data || this.options.dataset);\r\n\t\t\t}\r\n\r\n\t\t\t// generate pagination\r\n\t\t\tif(this.options.pagination && this.options.dataset != undefined && this.options.dataset.data != undefined) {\r\n\t\t\t\tplugin.paginate(this.options.dataset);\r\n\t\t\t}\r\n\r\n\t\t\t$(window).resize(function() {\r\n\t\t\t\tplugin.resizeRowLinks();\r\n\t\t\t});\r\n\r\n\t\t\t// indicate activated\r\n\t\t\t$(this.element).addClass('--interactive');\r\n\t\t},\r\n\r\n\t\tpopulate: function(data) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $element = $(this.element);\r\n\r\n\t\t\t// empty first\r\n\t\t\tplugin.empty();\r\n\r\n\t\t\t// get all rows\r\n\t\t\tvar rows = [];\r\n\t\t\tfor(var i in data) {\r\n\t\t\t\tvar item = data[i];\r\n\t\t\t\trows.push(this.options.row(item));\r\n\t\t\t}\r\n\r\n\t\t\t// build elements\r\n\t\t\tvar $body = $element.find('tbody');\r\n\t\t\tfor(var i in rows) {\r\n\t\t\t\tvar row = rows[i];\r\n\t\t\t\tvar item = data[i];\r\n\t\t\t\tvar $row = $('<tr></tr>').appendTo($body);\r\n\t\t\t\tfor(var j in row) {\r\n\t\t\t\t\tvar cell = row[j];\r\n\t\t\t\t\tvar column = this.options.columns[j] || '';\r\n\t\t\t\t\tvar $cell = $('<td></td>').appendTo($row);\r\n\t\t\t\t\t$cell.html(cell);\r\n\t\t\t\t\t$cell.addClass(column);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// modify row if callback is defined\r\n\t\t\t\tif(this.options.modifyRow != undefined) {\r\n\t\t\t\t\tvar modifiers = this.options.modifyRow(item);\r\n\t\t\t\t\tif(modifiers) {\r\n\t\t\t\t\t\tfor(var m in modifiers) {\r\n\t\t\t\t\t\t\tvar attr  = m;\r\n\t\t\t\t\t\t\tvar value = modifiers[m];\r\n\t\t\t\t\t\t\t$row.attr(attr, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tplugin.resizeRowLinks();\r\n\t\t},\r\n\r\n\t\tempty: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $element = $(this.element);\r\n\r\n\t\t\t// get tbody\r\n\t\t\tvar $body = $element.find('tbody');\r\n\t\t\t$body.empty();\r\n\t\t},\r\n\r\n\t\tsearch: function(params) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $element = $(this.element);\r\n\r\n\t\t\tif(params == undefined) {\r\n\t\t\t\tparams = {};\r\n\t\t\t}\r\n\r\n\t\t\t// get fields for table header\r\n\t\t\tparams = $.extend(params, $element.find('thead').parse(function(input) {\r\n\t\t\t\treturn $(input).val() !== '';\r\n\t\t\t}));\r\n\r\n\t\t\t// get url, this will do for now\r\n\t\t\tvar url = window.location.href;\r\n\r\n\t\t\t$.ajax(url, {\r\n\t\t\t\tdata: params,\r\n\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\tvar dataset = json[plugin.options.datasetKey];\r\n\t\t\t\t\tplugin.populate(dataset.data);\r\n\t\t\t\t\tif(dataset != undefined) {\r\n\t\t\t\t\t\tplugin.populate(dataset.data);\r\n\t\t\t\t\t\tplugin.paginate(dataset);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tplugin.empty();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpaginate: function(paginated) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $element = (this.paginationBefore === '') ? $(this.element) : $(this.options.paginationBefore);\r\n\r\n\t\t\tvar range = 4;\r\n\t\t\tvar step = 3;\r\n\t\t\tvar first = Math.max(paginated.current_page - range, 1);\r\n\t\t\tvar curr  = paginated.current_page;\r\n\t\t\tvar last  = Math.min(paginated.current_page + range, paginated.last_page);\r\n\r\n\t\t\tvar i;\r\n\t\t\t$element.find('.pagination').remove();\r\n\t\t\tvar $pagination = $('<ul class=\"pagination\">').insertAfter($element);\r\n\r\n\t\t\t// prev\r\n\t\t\tif(curr != first) {\r\n\t\t\t\ti = Math.max(curr - step, 1);\r\n\t\t\t\t$('<a class=\"pagination-prev\" href=\"?page=' + i + '\">' + '‹' + '</a>').appendTo($pagination);\r\n\t\t\t}\r\n\t\t\t// next placeholder\r\n\t\t\telse {\r\n\t\t\t\t$('<span class=\"pagination-placehold\">' + '‹' + '</span>').appendTo($pagination);\r\n\t\t\t}\r\n\r\n\t\t\t// numbers\r\n\t\t\tfor(i = first; i <= last; i++) {\r\n\t\t\t\tvar $page = $('<a class=\"pagination-page\" href=\"?page=' + i + '\">' + i + '</a>').appendTo($pagination);\r\n\t\t\t\t$page.toggleClass('current', i == curr);\r\n\t\t\t}\r\n\r\n\t\t\t// next\r\n\t\t\tif(curr != last) {\r\n\t\t\t\ti = Math.min(curr + step, paginated.last_page);\r\n\t\t\t\t$('<a class=\"pagination-next\" href=\"?page=' + i + '\">' + '›' + '</a>').appendTo($pagination);\r\n\t\t\t}\r\n\t\t\t// next placeholder\r\n\t\t\telse {\r\n\t\t\t\t$('<span class=\"pagination-placehold\">' + '›' + '</span>').appendTo($pagination);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeRowLinks: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $element = $(this.element);\r\n\t\t\t$element.find('a[data-rowlink]').width($element.width());\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * tabs.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'tabs',\r\n\t\tdefaults = {};\r\n\r\n\t// The actual plugin constructor\r\n\t// Expected element: <div class=\"datatable\">\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $element = $(this.element);\r\n\r\n\t\t\t// table header row: toggle searchable field\r\n\t\t\t$(this.element).on('click', '.tab-pane__nav__link', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar $this = $(this);\r\n\t\t\t\tvar $link = $this.find('a');\r\n\t\t\t\t$element.find('.tab-pane__nav__link').removeClass('--active');\r\n\t\t\t\t$this.addClass('--active');\r\n\r\n\t\t\t\t$element.find('.tab-pane__content').removeClass('--active');\r\n\t\t\t\t$element.find('.tab-pane__content').filter($link.attr('href')).addClass('--active');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * parse.js\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Extend\r\n\t$.fn.extend({\r\n\t\tparse: function(preFilter) {\r\n\r\n\t\t\t// helper\r\n\t\t\tvar buildProp = function(obj, props, value) {\r\n\t\t\t\tvar plugin = this;\r\n\t\t\t\tvar prop = props.shift();\r\n\t\t\t\tif(props.length) {\r\n\t\t\t\t\tif(prop == '') {\r\n\t\t\t\t\t\tvar i = -1;\r\n\t\t\t\t\t\tfor(var prop in obj) {\r\n\t\t\t\t\t\t\tif(/^[0-9]+$/g.test(prop) === true) {\r\n\t\t\t\t\t\t\t\ti = Math.max(i, prop);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tobj[++i] = {};\r\n\t\t\t\t\t\tbuildProp(obj[i], props, value)\r\n\t\t\t\t\t} else if(obj[prop]) {\r\n\t\t\t\t\t\tbuildProp(obj[prop], props, value)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj[prop] = {};\r\n\t\t\t\t\t\tbuildProp(obj[prop], props, value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobj[prop] = value;\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\r\n\t\t\tvar r20 = /%20/g,\r\n\t\t\t\trbracket = /\\[\\]$/,\r\n\t\t\t\trCRLF = /\\r?\\n/g,\r\n\t\t\t\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n\t\t\t\trsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\t\t\tvar rcheckableType = (/^(?:checkbox|radio)$/i);\r\n\r\n\t\t\t// method\r\n\t\t\treturn (function(element) {\r\n\t\t\t\tvar config = {};\r\n\t\t\t\t// we are no longer using jQuery's \"serializeArray\" method, since we want to be able to invoke \"parse\" on arbitrary elements, not just forms\r\n\t\t\t\t$(element).find(':input')\r\n\t\t\t\t\t// standard input filter\r\n\t\t\t\t\t.filter(function() {\r\n\t\t\t\t\t\tvar type = this.type;\r\n\t\t\t\t\t\t// Use .is(\":disabled\") so that fieldset[disabled] works\r\n\t\t\t\t\t\treturn this.name && !$(this).is(':disabled') &&\r\n\t\t\t\t\t\t\trsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) &&\r\n\t\t\t\t\t\t\t(this.checked || !rcheckableType.test(type));\r\n\t\t\t\t\t})\r\n\t\t\t\t\t// custom filter function\r\n\t\t\t\t\t.filter(function() {\r\n\t\t\t\t\t\tif(preFilter != undefined) {\r\n\t\t\t\t\t\t\tif(preFilter(this) === false) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map(function(item) {\r\n\t\t\t\t\t\tvar item = this;\r\n\t\t\t\t\t\tvar props = item.name.replace(/\\]\\[/g, '~').replace(/\\[/g, '~').replace(/\\]/g, '').split('~');\r\n\t\t\t\t\t\tconfig = buildProp(config, props, item.value);\r\n\t\t\t\t\t});\r\n\t\t\t\treturn config;\r\n\t\t\t})(this);\r\n\t\t}\r\n\t});\r\n\r\n})(jQuery, window, document);","/**\r\n * value.js\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Extend\r\n\t$.fn.extend({\r\n\t\tnested: function(property, alternate) {\r\n\t\t\talternate = alternate || undefined;\r\n\t\t\tvar curr = $(this).get(0);\r\n\t\t\tproperty = property.replace(/\\:/g, '.:');\r\n\t\t\tproperty = property.replace(/^\\./, '');\r\n\t\t\tvar parts = property.split('.');\r\n\t\t\tfor(var i in parts) {\r\n\t\t\t\tif(curr[parts[i]] !== undefined && curr[parts[i]] !== null) {\r\n\t\t\t\t\tcurr = curr[parts[i]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// read special case parts\r\n\t\t\t\t\tswitch(parts[i]) {\r\n\t\t\t\t\t\tcase ':first':\r\n\t\t\t\t\t\t\tcurr = curr[0] || undefined;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tcurr = alternate;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(curr == undefined || curr == null || (typeof(curr) == 'string' && curr.replace(/^\\s+/, '').replace(/\\s+$/, '').length == 0)) {\r\n\t\t\t\t\tcurr = alternate;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn curr;\r\n\t\t},\r\n\r\n\t\tpluck: function(property, alternate) {\r\n\t\t\treturn $.map(this, function(o) { return o[property]; });\r\n\t\t}\r\n\t});\r\n\r\n})(jQuery, window, document);","// app.js\r\n\r\njQuery(function($) {\r\n\t$('.tab-pane').tabs();\r\n});"]}