{"version":3,"sources":["_brand-greylist.js","_notifications.js","comment/_comment-write.js","gig/_gig-accept.js","post/_authoring.js","post/_facebook.js","post/_pinterest.js","post/_post-share.js","post/_post-write.js","post/_post.js","post/_socialtagger.js","post/_tagger.js","post/_twitter.js","post/_youtube.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxjxhlpjlxfile":"types.js","sourcesContent":["/**\r\n * brand-greylist.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for brand greylist\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'brandgreylist',\r\n\t\tdefaults = {\r\n\t\t\tbrands: []\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// activate\r\n\t\t\t$(this.element).on('click', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// submit form\r\n\t\t\t\tplugin.showBrands();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tshowBrands: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar options = this.options;\r\n\t\t\tvar element = this.element;\r\n\r\n\t\t\t// get dialog object, we'll open this later\r\n\t\t\tvar $dialog = $('#' + $(this.element).data('dialog-content'));\r\n\t\t\tif($dialog.data('loaded')) {\r\n\t\t\t\tplugin.initDialog($dialog);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(options.brands == undefined) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// mark dialog as loaded\r\n\t\t\t// this should throttle back future api requests\r\n\t\t\t$dialog.data('loaded', true);\r\n\r\n\t\t\t// populate select boards dialog\r\n\t\t\tvar $list = $dialog.find('#brand-greylist-selection-list');\r\n\t\t\t$list.find('li:not(.--template)').remove();\r\n\t\t\tfor(var i in options.brands) {\r\n\t\t\t\tvar $template = $list.find('li.--template').clone();\r\n\t\t\t\tvar brand = options.brands[i];\r\n\t\t\t\t$template.removeClass('--template');\r\n\t\t\t\t$template.data('id', brand.id);\r\n\t\t\t\t//$template.find('.entity__icon').attr('src', brand.profile_picture_tiny);\r\n\t\t\t\t$template.find('.entity__icon').attr('src', brand.profile_picture_small);\r\n\t\t\t\t$template.find('label').text(brand.name);\r\n\t\t\t\t$list.append($template);\r\n\t\t\t}\r\n\t\t\tplugin.initDialog($dialog);\r\n\t\t},\r\n\r\n\t\tinitDialog: function($dialog) {\r\n\t\t\tvar $original = $(this.element);\r\n\r\n\t\t\t// show dialog\r\n\t\t\t$('.dialog').trigger('show', [$dialog]);\r\n\r\n\t\t\tif($dialog.data('initialised')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t$dialog.data('initialised', true);\r\n\r\n\t\t\t// selecting boards\r\n\t\t\t$('.dialog').on('click', '.entity', function(e) {\r\n\t\t\t\tvar val = $('.dialog').find('input[name=greylist]').val();\r\n\t\t\t\tvar id = $(this).data('id');\r\n\t\t\t\tif($(this).hasClass('--active')) { // remove\r\n\t\t\t\t\tval = val.replace(',' + $(this).data('id') + ',', ',');\r\n\t\t\t\t\tif(val == ',') {\r\n\t\t\t\t\t\tval = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { // add\r\n\t\t\t\t\tif(val.indexOf(',' + id + ',') == -1) {\r\n\t\t\t\t\t\tval = (val.length == 0 ? ',' : val);\r\n\t\t\t\t\t\tval = val + id + ',';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$('.dialog').find('input[name=greylist]').val(val);\r\n\t\t\t\t$(this).toggleClass('--active');\r\n\t\t\t});\r\n\r\n\t\t\t// selecting boards\r\n\t\t\t$('.dialog').on('click', '.confirm-selection', function(e) {\r\n\t\t\t\t// populate list\r\n\t\t\t\tvar $brands = $('#brand-greylist-selection-list').find('li.\\--active').clone();\r\n\t\t\t\t$brands.removeClass('--active');\r\n\t\t\t\t$('#brand-greylist-current-selection').find('li').remove();\r\n\t\t\t\t$('#brand-greylist-current-selection').append($brands);\r\n\r\n\t\t\t\tvar $input = $('.dialog').find('input[name=greylist]').clone();\r\n\t\t\t\t$original.find('input[name=greylist]').remove();\r\n\t\t\t\t$original.append($input);\r\n\t\t\t\t$original.trigger('select');\r\n\t\t\t});\r\n\r\n\t\t\t// cancel\r\n\t\t\t$('.dialog').on('click', '.cancel-selection', function(e) {\r\n\t\t\t\t$original.find('input[name=greylist]').remove();\r\n\t\t\t\t$original.trigger('deselect');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * notifications.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for notifications\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'notifications',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $dropdown = $(this.element);\r\n\r\n\t\t\t// dropdown\r\n\t\t\t$(this.element).dropdown();\r\n\r\n\t\t\t// mark as read\r\n\t\t\t$(this.element).on('click', '.dropdown__trigger', function(e) {\r\n\t\t\t\tif($dropdown.find('.account__counter__value').text() != '0') {\r\n\t\t\t\t\t// ajax it up\r\n\t\t\t\t\t$.ajax($dropdown.data('action'), {\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tdata: { _token: $dropdown.data('token') },\r\n\t\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\t\tvar reset = $dropdown.find('.account__counter__value').data('reset-value');\r\n\t\t\t\t\t\t\t$dropdown.find('.itemlist .notification').removeClass('--unread');\r\n\t\t\t\t\t\t\t$dropdown.find('.account__counter__value').text(reset);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * comment-write.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for comment-write objects\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'commentwrite',\r\n\t\tdefaults = {\r\n\t\t\tinjectTarget: function(element) {\r\n\t\t\t\tvar $ele = $(element);\r\n\t\t\t\treturn $($ele.data('target'));\r\n\t\t\t},\r\n\t\t\tinjectMethod: 'append',\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// auto suggest entities\r\n\t\t\t$(this.element).find('textarea').tagger();\r\n\r\n\t\t\t// post submission\r\n\t\t\t$(this.element).on('submit', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// submit form\r\n\t\t\t\tplugin.submitPost();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsubmitPost: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// validation\r\n\t\t\t// - requires text\r\n\t\t\tif($(this.element).find('[name=message]').val().trim().length == 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// ajax it up\r\n\t\t\t$.ajax($(this.element).attr('action'), {\r\n\t\t\t\tmethod: $(this.element).attr('method') || 'POST',\r\n\t\t\t\tdata: $(this.element).serialize(),\r\n\t\t\t\tsuccess: function(html) {\r\n\t\t\t\t\t// clear form\r\n\t\t\t\t\tplugin.resetForm();\r\n\r\n\t\t\t\t\t// inject new post\r\n\t\t\t\t\tplugin.inject(html);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tinject: function(html) {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tvar $target = plugin.getInjectTarget();\r\n\t\t\tvar $item   = $(html).addClass('--injected');\r\n\t\t\tif(plugin.options.injectMethod == 'prepend') {\r\n\t\t\t\t$target.prepend($item);\r\n\t\t\t} else if(plugin.options.injectMethod == 'append') {\r\n\t\t\t\t$target.append($item);\r\n\t\t\t}\r\n\r\n\t\t\t// remove injected class\r\n\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t$item.removeClass('--injected');\r\n\t\t\t}, 100);\r\n\r\n\t\t\t// init incrementer, making sure all child elements have it too\r\n\t\t\t$item.add($item.find('.incrementer')).increment();\r\n\t\t\t$item.trigger('increment');\r\n\t\t},\r\n\r\n\t\tresetForm: function() {\r\n\t\t\t// list of fields to reset\r\n\t\t\tvar resetFields = [\r\n\t\t\t\t'message'\r\n\t\t\t];\r\n\t\t\tvar $reset = $(this.element).find(':input').filter(function() {\r\n\t\t\t\treturn $.inArray($(this).attr('name'), resetFields) !== -1;\r\n\t\t\t});\r\n\t\t\t$reset.each(function() {\r\n\t\t\t\tif($(this).attr('type') == 'checkbox' || $(this).attr('type') == 'radio') {\r\n\t\t\t\t\t$(this).prop('checked', false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(this).val('');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// helpers\r\n\r\n\t\tgetInjectTarget: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tvar target = plugin.options.injectTarget;\r\n\t\t\tvar $target = null;\r\n\r\n\t\t\tif(typeof(target) == 'function') {\r\n\t\t\t\t$target = target(this.element);\r\n\t\t\t} else if(typeof(target) == 'string') {\r\n\t\t\t\t$target = $(plugin.options.injectTarget);\r\n\t\t\t}\r\n\t\t\treturn $target;\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * gig-accept.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for comment-write objects\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'gigaccept',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// post submission\r\n\t\t\t$(this.element).on('submit', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// submit form\r\n\t\t\t\tplugin.submitPost();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsubmitPost: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// ajax it up\r\n\t\t\t$.ajax($(this.element).attr('action'), {\r\n\t\t\t\tmethod: $(this.element).attr('method') || 'POST',\r\n\t\t\t\tdata: $(this.element).serialize(),\r\n\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t// go to the engagement page\r\n\t\t\t\t\t//window.location = json.redirect;\r\n\t\t\t\t\t//$('.dialog').trigger('hide');\r\n\t\t\t\t\t$('body').trigger('redirect', json.redirect);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * post-share.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for post-share objects\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'postauthoring',\r\n\t\tdefaults = {\r\n\t\t\tinjectTarget: function(element) {\r\n\t\t\t\tvar $ele = $(element);\r\n\t\t\t\treturn $($ele.data('target'));\r\n\t\t\t},\r\n\t\t\tajax: 'default', // 'default' = ajax if file field not present\r\n\t\t\tinjectMethod: 'prepend',\r\n\t\t\tsuccess: $.noop,\r\n\t\t\trequireSocialMedia: false,\r\n\t\t\tautosave: false\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tthis.isTwitterInvalid = false;\r\n\t\t\tthis.isYoutubeInvalid = false;\r\n\t\t\tthis.newlyActivatedPlatformPost = '';\r\n\r\n\t\t\tplugin.renderSelectedAccount();\r\n\t\t\tplugin.pastedLink();\r\n\t\t\tplugin.fileUploadingProcess();\r\n\t\t\tplugin.gigAssetSelection();\r\n\t\t\tplugin.toggleContinueButton();\r\n\t\t\tplugin.toggleSubmitButton();\r\n\t\t\tplugin.updateAnchorDownState();\r\n\r\n\t\t\t// adjust flash container\r\n\t\t\t$('.flash-container').css('top', '56px');\r\n\r\n\t\t\t// toggle state based on current attachment (if any)\r\n\t\t\tvar attachment = $('.postauthoring__attachment-wrapper').find('[name=attachment\\\\[type\\\\]]').val();\r\n\t\t\tplugin.togglePlatformState(attachment);\r\n\r\n\t\t\t// init character counter\r\n\t\t\t$(plugin.element).find('.character-counter').characterCounter();\r\n\r\n\t\t\t//  body click event - close account list when clicked outside element\r\n\t\t\t$(document).click(function(event) {\r\n\t\t\t\tif(!$(event.target).closest('.account-list').length) {\r\n\t\t\t\t\t$('.account-list').removeClass('--active');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Open each account list\r\n\t\t\t$(plugin.element).find('.account-list').find('i').click(function() {\r\n\t\t\t\tif($(this).closest('.account-list').hasClass('--active')) {\r\n\t\t\t\t\t$(this).closest('.account-list').removeClass('--active');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(plugin.element).find('.account-list').removeClass('--active');\r\n\t\t\t\t\t$(this).closest('.account-list').addClass('--active');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// toggle account selection\r\n\t\t\t$(plugin.element).find('.all-account-wrapper').find('.account').click(function() {\r\n\t\t\t\tvar parentElement = $(this).closest('.all-account-wrapper'),\r\n\t\t\t\t\taccountPlatformElement = $(this).closest('.account-list'),\r\n\t\t\t\t\tdataPlatform = $(this).data('platform'),\r\n\t\t\t\t\tdataName = $(this).find('span.name').text();\r\n\r\n\t\t\t\t// get default values\r\n\t\t\t\tvar defaults = $('[name=platform_defaults]').val() || '[]';\r\n\t\t\t\tvar prepopulate = $('[name=prepopulate]').val() || '[]';\r\n\t\t\t\tdefaults = JSON.parse(defaults);\r\n\t\t\t\tprepopulate = JSON.parse(prepopulate);\r\n\r\n\t\t\t\t// remove / create post element\r\n\t\t\t\tif($(this).hasClass('--active')) {\r\n\t\t\t\t\t$(this).removeClass('--active');\r\n\t\t\t\t\tplugin.removeRenderedPlatformPost(dataPlatform, dataName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(this).addClass('--active');\r\n\t\t\t\t\tplugin.setNewlyActivatedPlatformPost($(this));\r\n\t\t\t\t\tplugin.renderPlatformPostingItem(defaults, prepopulate);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(parentElement.find('.account.--active').length > 0) {\r\n\t\t\t\t\taccountPlatformElement.addClass('--enabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\taccountPlatformElement.removeClass('--enabled');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplugin.renderSelectedAccount();\r\n\t\t\t\tplugin.toggleContinueButton();\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\r\n\t\t\t// Remove attachment process\r\n\t\t\t$(plugin.element).on('click', '.postauthoring__attachment-wrapper__close-button', function() {\r\n\t\t\t\tplugin.removeAttachment();\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\r\n\t\t\t// Copy textarea at first step data to variable\r\n\t\t\t$(plugin.element).find('textarea#textarea_message_write').on('change', function(e) {\r\n\t\t\t\t$('.post-panel-item__content__textbox').val($(this).val());\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\r\n\t\t\t// Continue to platform posting if theres any linked account checked\r\n\t\t\t// Submit form if no linked account\r\n\t\t\t$('.postauthoring__post-footer__continue-button').click(function() {\r\n\r\n\t\t\t\t// stop any playing videos\r\n\t\t\t\t$('.postauthoring video').each(function() {\r\n\t\t\t\t\tthis.pause();\r\n\t\t\t\t});\r\n\t\t\t\t$('.postauthoring iframe').each(function() {\r\n\t\t\t\t\tvar src = $(this).attr('src');\r\n\t\t\t\t\t$(this).attr('src', src);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(!$.isEmptyObject(plugin.getLinkedAccountSelectedInformation())) {\r\n\t\t\t\t\tvar defaults = $('[name=platform_defaults]').val() || '[]';\r\n\t\t\t\t\tvar prepopulate = $('[name=prepopulate]').val() || '[]';\r\n\t\t\t\t\tdefaults = JSON.parse(defaults);\r\n\t\t\t\t\tprepopulate = JSON.parse(prepopulate);\r\n\t\t\t\t\tplugin.toggleSubmitButton();\r\n\t\t\t\t\t$(plugin.element).parents('.postauthoring__wrapper').removeClass('--step-one').addClass('--step-two');\r\n\t\t\t\t\t$(plugin.element).addClass('--selected');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//$(plugin.element).find('form').submit();\r\n\t\t\t\t\t//plugin.submitPost();\r\n\t\t\t\t\tplugin.startPostSubmission();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Go back to write post\r\n\t\t\t$('.postauthoring__post-heading__informational-block__back-button').click(function() {\r\n\t\t\t\t$(plugin.element).parents('.postauthoring__wrapper').removeClass('--step-two').addClass('--step-one');\r\n\t\t\t\t$(plugin.element).removeClass('--selected');\r\n\t\t\t\tplugin.toggleContinueButton();\r\n\t\t\t});\r\n\r\n\t\t\t// Open close panel at step2\r\n\t\t\t$('.postauthoring__post-panels').on('click', '.post-panel-item__heading', function() {\r\n\t\t\t\t$(this).parent('.post-panel-item').toggleClass('--active');\r\n\t\t\t});\r\n\r\n\t\t\t// Textarea at platform post on:keyup\r\n\t\t\t$('.postauthoring__post-panels').on('keyup', '.post-panel-item__content__textbox', function() {\r\n\r\n\t\t\t\tvar postPanelItemElement = $(this).closest('.post-panel-item');\r\n\r\n\t\t\t\tif($(this).text() != $(plugin.getPostText()).text()) {\r\n\t\t\t\t\tpostPanelItemElement.addClass('--changed');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpostPanelItemElement.removeClass('--changed');\r\n\t\t\t\t}\r\n\t\t\t\tplugin.renderCharacterCounter(postPanelItemElement);\r\n\t\t\t\tplugin.toggleSubmitButton();\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\r\n\t\t\t// Cancel changes button at platform text clicked\r\n\t\t\t$('.postauthoring__post-panels').on('click', '.post-panel-item__footer span', function() {\r\n\t\t\t\tplugin.revertPlatformText($(this).closest('.post-panel-item'));\r\n\t\t\t});\r\n\r\n\t\t\t// Submit form using post-button\r\n\t\t\t$('.postauthoring__post-footer__post-button').click(function() {\r\n\t\t\t\t// render tags and messages\r\n\t\t\t\t$('.postauthoring').find('[contenteditable]').trigger('render-tags');\r\n\t\t\t\t// add form fields\r\n\t\t\t\t$('.post-panel-item__content__textbox').each(function() {\r\n\t\t\t\t\tvar name = $(this).attr('name');\r\n\t\t\t\t\tvar value = $(this).realVal();\r\n\t\t\t\t\tvar $i = $('<input type=\"hidden\" name=\"' + name + '\">');\r\n\t\t\t\t\t$i.val(value);\r\n\t\t\t\t\t$(this).after($i);\r\n\t\t\t\t});\r\n\t\t\t\t//$(plugin.element).find('form').submit();\r\n\t\t\t\t//plugin.submitPost();\r\n\t\t\t\tplugin.startPostSubmission();\r\n\t\t\t});\r\n\r\n\t\t\t// Remove css rules: html - overflow:hidden (this was found at _dialog.css)\r\n\t\t\t$('html').css({\r\n\t\t\t\t'overflow': 'initial'\r\n\t\t\t});\r\n\r\n\t\t\t// Youtube post options on:keyup\r\n\t\t\t$('.postauthoring__post-panels').on('change', '.post-panel-item__option-item :input', function() {\r\n\t\t\t\tplugin.invalidEmptyYoutubeOptions($(this));\r\n\t\t\t\tplugin.checkAllYoutubeIfInvalid();\r\n\t\t\t\tplugin.toggleSubmitButton();\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\r\n\t\t\t// checklist - populate post\r\n\t\t\t$('#engagementPublishTagsList').on('click', 'a', function() {\r\n\t\t\t\tvar $publish = $('#form_post_authoring').find('textarea');\r\n\t\t\t\tvar value = $publish.val();\r\n\t\t\t\tvar tag = $(this).data('content');\r\n\t\t\t\t$publish.val(value + ' ' + tag);\r\n\r\n\t\t\t\t// resize textarea\r\n\t\t\t\t$publish.trigger('refresh');\r\n\t\t\t});\r\n\r\n\t\t\t// prepopulation\r\n\t\t\tvar prepopulate = $('[name=prepopulate]').val() || '[]';\r\n\t\t\tprepopulate = JSON.parse(prepopulate);\r\n\t\t\tfor(var i in prepopulate) {\r\n\t\t\t\tvar row = prepopulate[i];\r\n\t\t\t\tvar accountId = row.linked_id;\r\n\t\t\t\tvar subId = row.sub_id;\r\n\t\t\t\tvar $account = $('.all-account-wrapper').find('.account').filter(function() {\r\n\t\t\t\t\treturn $(this).data('linked-id') == accountId && ($(this).data('sub-id') == subId || (subId == '' && !$(this).data('sub-id')));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// select accounts\r\n\t\t\t\t$account.trigger('click');\r\n\t\t\t}\r\n\r\n\t\t\t// platform_defaults\r\n\t\t\tvar platform_defaults = $('[name=platform_defaults]').val() || '[]';\r\n\t\t\tplatform_defaults = JSON.parse(platform_defaults);\r\n\t\t\tfor(var key in platform_defaults) {\r\n\t\t\t\tvar val = platform_defaults[key];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// anchor down\r\n\t\t\t$('.postauthoring__anchordown').click(function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar offset = $('.postauthoring__post-text-social-platform').offset().top;\r\n\t\t\t\t$('body').animate({ scrollTop: offset });\r\n\t\t\t\t$(this).removeClass('--active');\r\n\t\t\t\t$(this).addClass('expired');\r\n\t\t\t});\r\n\t\t},\r\n\t\tstartPostSubmission: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// check for dialog check list\r\n\t\t\tvar $checklist = $('#engagement-checklist');\r\n\t\t\tif($checklist.length) {\r\n\t\t\t\t$('.dialog').trigger('show', [$checklist, 'engagement-checklist', null, function() {\r\n\r\n\t\t\t\t\t// extract tags and update dialog check list, if the check list even exists\r\n\t\t\t\t\tvar $checklist = $('#checklist');\r\n\t\t\t\t\tif($checklist.length) {\r\n\t\t\t\t\t\t$checklist.off('change', 'input[type=checkbox]');\r\n\t\t\t\t\t\t$checklist.on('change', 'input[type=checkbox]', function() {\r\n\t\t\t\t\t\t\t// if all boxes are checked, then show publish button\r\n\t\t\t\t\t\t\tvar $checklist = $(this).parents('#checklist');\r\n\t\t\t\t\t\t\tif($checklist.find('input[type=checkbox]:not(:checked)').length > 0 && $checklist.find('input[type=checkbox]').length > 0) {\r\n\t\t\t\t\t\t\t\t$('.submit-post').addClass('--disabled');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$('.submit-post').removeClass('--disabled');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$checklist.find('input[type=checkbox]:first').triggerHandler('change');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$('.submit-post').removeClass('--disabled');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// submit action\r\n\t\t\t\t\t$('.dialog').find('.submit-post').one('click', function(e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\t// disable button\r\n\t\t\t\t\t\tvar $button = $(this);\r\n\t\t\t\t\t\t$button.addClass('--disabled');\r\n\r\n\t\t\t\t\t\t// additional fields\r\n\t\t\t\t\t\tvar data = $('.dialog').find('form').parse();\r\n\t\t\t\t\t\tvar fields = $('<div class=\"dialog_additional_fields\"></div>');\r\n\t\t\t\t\t\tfor(var name in data) {\r\n\t\t\t\t\t\t\tvar val = data[name];\r\n\t\t\t\t\t\t\tvar $field = $('<input type=\"hidden\" name=\"' + name + '\">').val(val);\r\n\t\t\t\t\t\t\t$(fields).append($field);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar $form = $(plugin.element).find('form');\r\n\t\t\t\t\t\t$form.find('.dialog_additional_fields').remove();\r\n\t\t\t\t\t\t$form.append($(fields));\r\n\r\n\t\t\t\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t\t\t\tplugin.submitPost();\r\n\t\t\t\t\t\t}, 250);\r\n\t\t\t\t\t\t$('.dialog').trigger('hide');\r\n\t\t\t\t\t});\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\t\t\t// no checks needed, submit post\r\n\t\t\telse {\r\n\t\t\t\tplugin.submitPost();\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubmitPost: function() {\r\n\r\n\t\t\t// ajax it up\r\n\t\t\tvar $form = $(this.element).find('form');\r\n\t\t\t$.ajax($form.attr('action'), {\r\n\t\t\t\tmethod: $form.attr('method') || 'POST',\r\n\t\t\t\tdata: $form.serialize(),\r\n\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t// redirect\r\n\t\t\t\t\tif(json.redirect_url) {\r\n\t\t\t\t\t\t$('body').trigger('redirect', [json.redirect_url]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\trenderSelectedAccount: function() {\r\n\t\t\tvar plugin = this,\r\n\t\t\t\tselectedAccountTotal = $(plugin.element).find('.account-list').find('.account.--active').length,\r\n\t\t\t\tselectedAccountElement = $(plugin.element).find('.selected-account'),\r\n\t\t\t\tcaption = selectedAccountElement.data('caption');\r\n\r\n\t\t\tcaption = caption.replace('%d', selectedAccountTotal);\r\n\t\t\tif(selectedAccountTotal > 1) {\r\n\t\t\t\tcaption = caption.replace('account', 'accounts')\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tselectedAccountElement.text(caption);\r\n\r\n\t\t\tif(selectedAccountTotal > 0) {\r\n\t\t\t\t$(plugin.element).find('.postauthoring__post-panels').addClass('--active');\r\n\t\t\t\t$(plugin.element).find('.postauthoring__post-text-social-platform').addClass('--active');\r\n\t\t\t} else {\r\n\t\t\t\t$(plugin.element).find('.postauthoring__post-panels').removeClass('--active');\r\n\t\t\t\t$(plugin.element).find('.postauthoring__post-text-social-platform').removeClass('--active');\r\n\t\t\t}\r\n\t\t\tplugin.updateAnchorDownState();\r\n\t\t},\r\n\t\trenderPlatformPostingItem: function(defaults, prepopulate) {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// remove and replace post panels\r\n\t\t\tvar $panels = $('.postauthoring__post-panels');\r\n\r\n\t\t\t// youtube categories\r\n\t\t\tvar categories = $('[name=youtube_categories]').val();\r\n\t\t\tif(categories.length) {\r\n\t\t\t\tcategories = JSON.parse(categories);\r\n\t\t\t}\r\n\r\n\t\t\t// closure for finding records in prepopulated\r\n\t\t\tvar findDataBy = function(data, id) {\r\n\t\t\t\tfor(var i in data) {\r\n\t\t\t\t\tif(data[i].linked_id == id) {\r\n\t\t\t\t\t\treturn data[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// create post panels\r\n\t\t\t//var index = 0;\r\n\t\t\tvar index = $('.postauthoring__post-panels .post-panel-item:last').data('index');\r\n\t\t\tif(isNaN(index)) {\r\n\t\t\t\tindex = 0;\r\n\t\t\t} else {\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\t$.each(plugin.getLinkedAccountSelectedInformation(), function(e, val) {\r\n\t\t\t\tvar itemOption = \"\";\r\n\t\t\t\tvar hasInvalidClass = '';\r\n\t\t\t\tvar row = findDataBy(prepopulate, val.linkedId);\r\n\t\t\t\t//var message = (row && row.message) ? row.message : plugin.getPostText();\r\n\t\t\t\tvar defaultVal = defaults[val.platform];\r\n\r\n\t\t\t\t// message hierarchy: 1) prepopulate (messages previously saved), 2) platform default, 3) text form step 1, 4) blank\r\n\t\t\t\tvar message = '';\r\n\t\t\t\tmessage = plugin.getPostText() || message;\r\n\t\t\t\tmessage = defaultVal || message;\r\n\r\n\t\t\t\t// message_store and tags\r\n\t\t\t\tif(row && row.message_store) {\r\n\t\t\t\t\tmessage = row.message_store;\r\n\t\t\t\t\tif(row.tags) {\r\n\t\t\t\t\t\tfor(var i = 0 in row.tags) {\r\n\t\t\t\t\t\t\tvar tagRow = row.tags[i].raw || '';\r\n\t\t\t\t\t\t\tmessage = message.replace('[~' + i + ']', tagRow);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// youtube validation\r\n\t\t\t\tif(val.platform == 'youtube') {\r\n\r\n\t\t\t\t\t// populate drop down\r\n\t\t\t\t\tvar catList = categories[val.linkedId];\r\n\t\t\t\t\tvar options = '<option value=\"\"></option>';\r\n\t\t\t\t\tfor(var key in catList) {\r\n\t\t\t\t\t\toptions += '<option value=\"' + htmlEntities(key) + '\">' + htmlEntities(catList[key]) + '</option>';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thasInvalidClass = '--invalid';\r\n\t\t\t\t\titemOption = '<div class=\"post-panel-item__option\">'+\r\n\t\t\t\t\t\t'<div class=\"post-panel-item__option-title\">OPTIONS</div>'+\r\n\t\t\t\t\t\t'<div class=\"post-panel-item__option-items\">'+\r\n\t\t\t\t\t\t\t'<div class=\"post-panel-item__option-item --invalid\">'+\r\n\t\t\t\t\t\t\t\t'<div class=\"option-item-label\">Video Title*</div>'+\r\n\t\t\t\t\t\t\t\t'<div class=\"option-item-field youtube-options-title\"><input type=\"text\" name=\"platform_post['+ index +'][youtube_title]\"></div>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t\t'<div class=\"post-panel-item__option-item --invalid\">'+\r\n\t\t\t\t\t\t\t\t'<div class=\"option-item-label\">Video Category*</div>'+\r\n\t\t\t\t\t\t\t\t'<div class=\"option-item-field youtube-options-category\"><select name=\"platform_post['+ index +'][youtube_category]\">' + options + '</select></div>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t'</div>';\r\n\r\n\t\t\t\t\tplugin.isYoutubeInvalid = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// twitter validation\r\n\t\t\t\tif(val.platform == 'twitter') {\r\n\t\t\t\t\tvar charLengthValue = $('<div>').html(message).realText().length;\r\n\t\t\t\t\t//var charLengthValue = message.length;\r\n\t\t\t\t\tif(charLengthValue > 140) {\r\n\t\t\t\t\t\thasInvalidClass = '--invalid';\r\n\t\t\t\t\t\tplugin.isTwitterInvalid = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// params:\r\n\t\t\t\t// all (need?): name, platform, linked_id\r\n\t\t\t\t// +facebook: pages (eg: 1,2,3)\r\n\t\t\t\t// +pinterest: boards (eg: 1,2,3)\r\n\t\t\t\t// +youtube: title, category\r\n\t\t\t\tvar $panel = $('<div class=\"post-panel-item '+ val.platform +' --active '+ hasInvalidClass +'\" data-index=\"' + index + '\" data-account-id=\"' + val.linkedId + '\" data-platform=\"' + val.platform + '\" data-account-name=\"'+val.name+'\">'+\r\n\t\t\t\t\t'<div class=\"post-panel-item__heading\">'+\r\n\t\t\t\t\t\t'<div class=\"post-panel-item__heading__icon '+ val.platform +'\"><i class=\"'+ val.platformClass +'\"></i></div>'+\r\n\t\t\t\t\t\t'<div class=\"post-panel-item__heading__name\">'+\r\n\t\t\t\t\t\t\t'<span>'+ val.name +'</span>'+\r\n\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t'<div class=\"post-panel-item__heading__character\">'+ plugin.getPostTextCharacterLength() +'</div>'+\r\n\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t'<div class=\"post-panel-item__content-wrapper\">'+\r\n\t\t\t\t\t\t'<div class=\"tagger\">'+\r\n\t\t\t\t\t\t\t'<div class=\"post-panel-item__content\">'+\r\n\t\t\t\t\t\t\t\t'<div contenteditable=\"true\" name=\"platform_post['+ index +'][message]\" class=\"post-panel-item__content__textbox\">'+ message +'</div>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\titemOption+\r\n\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t'<div class=\"post-panel-item__footer\"><span>Cancel changes</span></div>'+\r\n\t\t\t\t\t'<input name=\"platform_post_id['+ index +']\" class=\"hidden\" value=\"'+ val.linkedId +'\">'+\r\n\t\t\t\t\t'<input name=\"platform_post['+ index +'][name]\" class=\"hidden\" value=\"'+ val.name +'\">'+\r\n\t\t\t\t\t'<input name=\"platform_post['+ index +'][platform]\" class=\"hidden\" value=\"'+ val.platform +'\">'+\r\n\t\t\t\t\t'<input name=\"platform_post['+ index +'][linked_id]\" class=\"hidden\" value=\"'+ val.linkedId +'\">'+\r\n\t\t\t\t\t'<input name=\"platform_post['+ index +'][sub_id]\" class=\"hidden\" value=\"'+ val.subId +'\">'+\r\n\t\t\t\t\t'<input name=\"platform_post['+ index +'][token]\" class=\"hidden\" value=\"'+ val.token +'\">'+\r\n\t\t\t\t'</div>').appendTo('.postauthoring__post-panels');\r\n\r\n\t\t\t\t// trigger character counter handler and change detection\r\n\t\t\t\t$panel.find('[contenteditable]').trigger('keyup');\r\n\r\n\t\t\t\t// increment\r\n\t\t\t\tindex++;\r\n\t\t\t});\r\n\r\n\t\t\tvar taggerSupport = [\r\n\t\t\t\t'facebook', // only supports tagging of pages, and needs facebook review\r\n\t\t\t\t'twitter',\r\n\t\t\t\t'instagram'\r\n\t\t\t];\r\n\r\n\t\t\t// assign tagger url\r\n\t\t\tvar taggerUrl = $(this.element).data('tagger-url');\r\n\t\t\t$('.post-panel-item').each(function() {\r\n\t\t\t\tvar accountId = $(this).data('account-id');\r\n\t\t\t\tif(taggerSupport.indexOf($(this).data('platform')) != -1) {\r\n\t\t\t\t\t$(this).find('[contenteditable]').data('tagger-url', taggerUrl + '/' + accountId);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// init text area\r\n\t\t\tvar tagCallback = function(json) {\r\n\t\t\t\tvar $wrapper = $(this).parents('.post-panel-item__content-wrapper .tagger');\r\n\t\t\t\t$wrapper.find('.post-panel-item__tags').remove();\r\n\t\t\t\tvar $item = $(this).parents('.post-panel-item');\r\n\t\t\t\tif(json.items != undefined && json.items.length > 0) {\r\n\t\t\t\t\t// append tags\r\n\t\t\t\t\tvar $items = $('<div class=\"post-panel-item__tags tagger__results --active\">').appendTo($wrapper);\r\n\t\t\t\t\t// items\r\n\t\t\t\t\tfor(var i in json.items) {\r\n\t\t\t\t\t\tvar item = json.items[i];\r\n\t\t\t\t\t\tvar html = '<div class=\"post-panel-item__tags__item suggestion\">'+\r\n\t\t\t\t\t\t\t'<img class=\"post-panel-item__tags__item__avatar\" src=\"' + htmlEntities(item.avatar) + '\" alt=\"\">'+\r\n\t\t\t\t\t\t\t'<span class=\"post-panel-item__tags__item__name\">' + htmlEntities(item.display_name) + '</span>'+\r\n\t\t\t\t\t\t\t'<i class=\"fa ' + $item.data('platform') + ' ' + plugin.getPlatformIconClass($item.data('platform')) + '\"></i>'+\r\n\t\t\t\t\t\t'</div>';\r\n\t\t\t\t\t\t$(html)\r\n\t\t\t\t\t\t\t.data('profile-id', item.native_id)\r\n\t\t\t\t\t\t\t.data('display-name', item.display_name)\r\n\t\t\t\t\t\t\t.data('platform', $item.data('platform'))\r\n\t\t\t\t\t\t\t.appendTo($items);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// text area\r\n\t\t\t$panels.find('textarea, [contenteditable]').textarea();\r\n\r\n\t\t\t// tagger\r\n\t\t\t$panels.find('textarea, [contenteditable]').socialtagger({\r\n\t\t\t\tcallback: tagCallback\r\n\t\t\t});\r\n\r\n\t\t\t// blur event to generate input elements for each tag\r\n\t\t\t$panels.find('textarea, [contenteditable]').on('blur', function() {\r\n\t\t\t\t$(this).trigger('render-tags');\r\n\t\t\t});\r\n\t\t\t$panels.find('textarea, [contenteditable]').on('render-tags', function() {\r\n\t\t\t\t$(this).parents('.tagger').find('.tags-container').remove();\r\n\t\t\t\tvar $c = $('<div class=\"tags-container\">');\r\n\t\t\t\tvar id = $(this).parents('.post-panel-item').data('account-id');\r\n\t\t\t\tvar index = $(this).parents('.post-panel-item').data('index');\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\t$(this).find('.o_.ot_').each(function() {\r\n\t\t\t\t\tvar html = $(this).clone().wrap('<p>').parent('p').html();\r\n\t\t\t\t\t$c.append('<input type=\"hidden\" name=\"platform_post[' + index + '][tags][' + i + '][id]\" value=\"' + $(this).data('id') + '\">');\r\n\t\t\t\t\t$c.append('<input type=\"hidden\" name=\"platform_post[' + index + '][tags][' + i + '][value]\" value=\"' + $(this).data('value') + '\">');\r\n\t\t\t\t\t$c.append('<input type=\"hidden\" name=\"platform_post[' + index + '][tags][' + i + '][text]\" value=\"' + '@' + $(this).data('text') + '\">');\r\n\t\t\t\t\t$c.append('<input type=\"hidden\" name=\"platform_post[' + index + '][tags][' + i + '][raw]\" value=\"' + htmlEntities(html) + '\">');\r\n\t\t\t\t\ti++;\r\n\t\t\t\t});\r\n\t\t\t\t$(this).after($c);\r\n\t\t\t\t$(this).trigger('render-real-value');\r\n\t\t\t});\r\n\t\t\t$panels.find('textarea, [contenteditable]').on('render-real-value', function() {\r\n\t\t\t\tvar $c = $(this).siblings('.tags-container');\r\n\t\t\t\t$c.find('textarea').remove();\r\n\r\n\t\t\t\tvar $value = $(this).clone();\r\n\t\t\t\tvar index = $(this).parents('.post-panel-item').data('index');\r\n\t\t\t\t$value.find('.o_[data-value]').each(function(index) {\r\n\t\t\t\t\tvar item = $value.find('.o_[data-value]').get(0);\r\n\t\t\t\t\t$(item).replaceWith('[~' + index + ']'); // just store tag reference\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$c.append('<textarea tabindex=\"-1\" style=\"position:absolute;left:-9999px;opacity:0;pointer-events:none;\" name=\"platform_post[' + index + '][message_store]\">' + htmlEntities($value.realHtml()) + '</textarea>');\r\n\t\t\t\t$(this).after($c);\r\n\t\t\t});\r\n\t\t},\r\n\t\tremoveRenderedPlatformPost: function(platform, name) {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t$(plugin.element).find('.post-panel-item.'+platform+'[data-account-name=\"'+name+'\"]').remove();\r\n\t\t},\r\n\t\tattachmentPreview: function(html) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar element = this.element;\r\n\r\n\t\t\tvar attachmentWrapper = '<div class=\"postauthoring__attachment-wrapper\">'+\r\n\t\t\t\t'<div class=\"postauthoring__attachment-wrapper__close-button\"><i class=\"fa fa-times\"></i></div>'+\r\n\t\t\t\thtml+\r\n\t\t\t\t'</div>';\r\n\t\t\t// register content change\r\n\t\t\t$(element).trigger('content-change');\r\n\r\n\t\t\t// replace attachment\r\n\t\t\t$(element).find('.postauthoring__attachment-wrapper').remove();\r\n\t\t\t$(element).find('.postauthoring__post').children('.postauthoring__post-text-wrapper').after(attachmentWrapper);\r\n\t\t\tvar attachmentTypeElement = $(element).find('.postauthoring__attachment-wrapper').find('.attachment');\r\n\t\t\tvar attachmentType = \"\";\r\n\r\n\t\t\tif(attachmentTypeElement.hasClass('--video')) {\r\n\t\t\t\tattachmentType = 'video';\r\n\t\t\t} else if(attachmentTypeElement.hasClass('--image')) {\r\n\t\t\t\tattachmentType = 'image';\r\n\t\t\t} else if(attachmentTypeElement.hasClass('--link')) {\r\n\t\t\t\tattachmentType = 'link';\r\n\t\t\t} else if(attachmentTypeElement.hasClass('--youtube')) {\r\n\t\t\t\tattachmentType = 'youtube';\r\n\t\t\t} else if(attachmentTypeElement.hasClass('--vimeo')) {\r\n\t\t\t\tattachmentType = 'vimeo';\r\n\t\t\t}\r\n\r\n\t\t\t// toggle enable / disable for each platform\r\n\t\t\tplugin.togglePlatformState(attachmentType);\r\n\t\t\tplugin.updateAnchorDownState();\r\n\t\t},\r\n\t\tscrapeUrl: function(url) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar element = this.element;\r\n\r\n\t\t\t// ajax to return url info\r\n\t\t\tif($(this.element).data('attachment-analyser').length) {\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: $(element).data('attachment-analyser'),\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t_token: $(element).find(':input[name=_token]').val(),\r\n\t\t\t\t\t\ta: url\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsuccess: function(html) {\r\n\t\t\t\t\t\tplugin.attachmentPreview(html);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tpastedLink: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// paste link as attachment\r\n\t\t\t$(this.element).find('textarea').on('paste', function(e) {\r\n\t\t\t\tvar element = $(this);\r\n\r\n\t\t\t\t// get clipboard data\r\n\t\t\t\tvar data = null;\r\n\t\t\t\tif(e.originalEvent.clipboardData !== undefined) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdata = e.originalEvent.clipboardData.getData('Text') || null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\tdata = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(window.clipboardData !== undefined) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdata = window.clipboardData.getData('Text') || null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\tdata = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// get alternate value if clipboard is not accessible\r\n\t\t\t\tif(data == null) {\r\n\t\t\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t\t\tvar dataAlt = element.val();\r\n\t\t\t\t\t\t//alert('fallback method');\r\n\t\t\t\t\t\telement.trigger('pastecomplete', [dataAlt]);\r\n\t\t\t\t\t}, 220);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//alert('normal method');\r\n\t\t\t\t\telement.trigger('pastecomplete', [data]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// textarea paste complete\r\n\t\t\t$(this.element).find('textarea').on('pastecomplete', function(e, data) {\r\n\t\t\t\t// get value of current element if data is null\r\n\t\t\t\tif(data == null) {\r\n\t\t\t\t\tdata = $(this).val();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// get first detected url in string and load attachment from it\r\n\t\t\t\tvar urlRegex = '(?!mailto:)(?:(?:http|https|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?';\r\n\t\t\t\tvar url = new RegExp(urlRegex, 'ig');\r\n\t\t\t\tvar matches = data.match(url);\r\n\r\n\t\t\t\t// create attachment\r\n\t\t\t\tif(matches) {\r\n\t\t\t\t\tplugin.scrapeUrl(matches[0]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tgigAssetSelection: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tvar $gigAssets = $('#action-gig-assets');\r\n\t\t\tif($gigAssets.length == 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// asset selection\r\n\t\t\t$gigAssets.find('.gig-assets').on('click', '.gig-asset-item', function() {\r\n\t\t\t\t$(this).siblings('.gig-asset-item').removeClass('--active');\r\n\t\t\t\t$(this).addClass('--active');\r\n\t\t\t\t$('.dialog').find('button').removeClass('--disabled');\r\n\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\r\n\t\t\t// asset confirm\r\n\t\t\t$gigAssets.find('form').on('submit', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t// get image\r\n\t\t\t\tvar $media = $(this).find('.gig-asset-item.--active img');\r\n\t\t\t\tif($media.length == 0) {\r\n\t\t\t\t\t$media = $(this).find('.gig-asset-item.--active video source');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add attachment preview\r\n\t\t\t\tvar resource = $media.attr('src');\r\n\t\t\t\tvar type = resource.split('.').pop();\r\n\r\n\t\t\t\tvar videos = [\r\n\t\t\t\t\t'mp4',\r\n\t\t\t\t\t'avi',\r\n\t\t\t\t\t'mov',\r\n\t\t\t\t\t'ogg'\r\n\t\t\t\t];\r\n\t\t\t\tvar images = [\r\n\t\t\t\t\t'png',\r\n\t\t\t\t\t'jpg',\r\n\t\t\t\t\t'gif',\r\n\t\t\t\t\t'jpeg'\r\n\t\t\t\t];\r\n\r\n\t\t\t\t// get file type\r\n\t\t\t\tif(videos.indexOf(type.toLowerCase()) !== -1) {\r\n\t\t\t\t\ttype = 'video';\r\n\t\t\t\t} else if(images.indexOf(type.toLowerCase()) !== -1) {\r\n\t\t\t\t\ttype = 'image';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttype = 'file';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(plugin.element).find('.postauthoring__attachment-wrapper').remove();\r\n\t\t\t\t//$(plugin.element).find('input[name=message_file]').remove();\r\n\t\t\t\t$(plugin.element).find('input[name=message_file]').attr('name', ''); // remove name attribute instead\r\n\r\n\t\t\t\t// create preview container\r\n\t\t\t\tvar $template = null;\r\n\t\t\t\tvar $preview = $('<div class=\"attachment-container\">' +\r\n\t\t\t\t\t'<input name=\"attachment[type]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[resource]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[description]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[title]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[source]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[url]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"message_existing_file\" type=\"hidden\">' +\r\n\t\t\t\t\t'</div>');\r\n\t\t\t\tvar $wrapper = $('<div class=\"postauthoring__attachment-wrapper\">');\r\n\t\t\t\t// add close button and preview\r\n\t\t\t\t$wrapper.append('<div class=\"postauthoring__attachment-wrapper__close-button\"><i class=\"fa fa-times\"></i></div>');\r\n\t\t\t\t$wrapper.append($preview);\r\n\t\t\t\t//$(plugin.element).find('.postauthoring__post').append($wrapper);\r\n\t\t\t\t$(plugin.element).find('.postauthoring__post .postauthoring__post-text-wrapper').after($wrapper);\r\n\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase 'image':\r\n\t\t\t\t\t\tvar $template = $('<div class=\"attachment --image\">' +\r\n\t\t\t\t\t\t\t'<div class=\"attachment__content\">' +\r\n\t\t\t\t\t\t\t'<img src=\"\" alt=\"\" />' +\r\n\t\t\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t\t\t'</div>');\r\n\r\n\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\t$template.find('img').attr('src', resource);\r\n\t\t\t\t\t\t$preview.find('input[name=attachment\\\\[type\\\\]]').val('image');\r\n\t\t\t\t\t\t$preview.find('input[name=message_existing_file]').val(resource);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'video':\r\n\t\t\t\t\t\tvar $template = $('<video width=\"100%\" controls>' +\r\n\t\t\t\t\t\t\t'<source src=\"\" type=\"\">' +\r\n\t\t\t\t\t\t\t'Your browser does not support HTML5 video.' +\r\n\t\t\t\t\t\t\t'</video>');\r\n\r\n\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\tvar mimetype = '?';\r\n\t\t\t\t\t\t$template.find('source').attr('src', resource);\r\n\t\t\t\t\t\t//$template.find('source').attr('type', mimetype);\r\n\t\t\t\t\t\t$preview.find('input[name=attachment\\\\[type\\\\]]').val('video');\r\n\t\t\t\t\t\t$preview.find('input[name=message_existing_file]').val(resource);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t$template.appendTo($preview);\r\n\r\n\t\t\t\tplugin.togglePlatformState(type);\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\r\n\t\t\t\t// close dialog\r\n\t\t\t\t$('.dialog').trigger('hide');\r\n\t\t\t});\r\n\r\n\t\t\t// select file dialog\r\n\t\t\t$(this.element).find('.action-select-file').on('click', function(e, selectOnOpen) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t$('.dialog').trigger('show', [$gigAssets, 'action-gig-assets', null, function() {\r\n\t\t\t\t\tif(selectOnOpen) {\r\n\t\t\t\t\t\tvar $items = $('.dialog').find('.gig-asset-item');\r\n\t\t\t\t\t\t$items.first().trigger('click');\r\n\t\t\t\t\t\t// only item? Then select and close\r\n\t\t\t\t\t\tif($items.size() == 1) {\r\n\t\t\t\t\t\t\t$('#form_gig_assets').trigger('submit');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}]);\r\n\t\t\t});\r\n\r\n\t\t\t// open dialog if no asset selected and gig assets are available\r\n\t\t\tif($(this.element).find('.action-select-file').length > 0 && $('.attachment-container').length == 0) {\r\n\t\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t\t$('.action-select-file').triggerHandler('click', [true]); // selectOnOpen\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t},\r\n\t\tfileUploadingProcess: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// post options attachments\r\n\t\t\t// http://www.html5rocks.com/en/tutorials/getusermedia/intro/\r\n\t\t\t$(this.element).find('.action-upload-file').on('click', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar target = $(this).data('target');\r\n\t\t\t\tvar $file = $(target);\r\n\r\n\t\t\t\t// phonegap or HTML input?\r\n\t\t\t\tif(is_phonegap) {\r\n\t\t\t\t\tpg_getMedia($(this), $file, function(url, $trigger, $file) {\r\n\t\t\t\t\t\tpg_uploadMedia(url, $trigger, $file);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$file.trigger('click');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(this.element).on('change', '.postauthoring__file-input', function(e) {\r\n\t\t\t\tvar $file = $(this);\r\n\t\t\t\tif($file.attr('name') == '') {\r\n\t\t\t\t\t$file.attr('name', $file.data('field-name'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar files = e.target.files;\r\n\t\t\t\tfor(var i = 0, f; f = files[i]; i++) {\r\n\t\t\t\t\t$(this).addClass('--has-file');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if live upload attributes found, upload\r\n\t\t\t\tif($file.data('fileupload-url')) {\r\n\t\t\t\t\t$file.trigger('upload', [files[0]]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(this.element).on('upload', '.postauthoring__file-input', function(e, file) {\r\n\t\t\t\tvar $file = $(this);\r\n\t\t\t\tname = file.name;\r\n\t\t\t\tsize = file.size;\r\n\t\t\t\ttype = file.type;\r\n\r\n\t\t\t\tvar types = [\r\n\t\t\t\t\t'image/png',\r\n\t\t\t\t\t'image/jpg',\r\n\t\t\t\t\t'image/gif',\r\n\t\t\t\t\t'image/jpeg',\r\n\t\t\t\t\t'video/mp4',\r\n\t\t\t\t\t'video/avi',\r\n\t\t\t\t\t'video/mov',\r\n\t\t\t\t\t'video/quicktime',\r\n\t\t\t\t\t'video/ogg'\r\n\t\t\t\t];\r\n\r\n\t\t\t\t// file present?\r\n\t\t\t\tif(file.name.length < 1) {\r\n\t\t\t\t}\r\n\t\t\t\t// check size\r\n\t\t\t\telse if(file.size > 40 * 1024 * 1024) {\r\n\t\t\t\t\talert(\"File is too big\");\r\n\t\t\t\t}\r\n\t\t\t\t// check file type\r\n\t\t\t\telse if(types.indexOf(file.type) === -1) {\r\n\t\t\t\t\talert('File format \"' + file.type + '\" not supported');\r\n\t\t\t\t}\r\n\t\t\t\t// ok to upload\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar formData = new FormData();\r\n\t\t\t\t\tformData.append('file', file);\r\n\t\t\t\t\tformData.append('_token', $file.parents('form').find('input[name=_token]').val());\r\n\r\n\t\t\t\t\t// insert thumbnail preview\r\n\t\t\t\t\t$file.trigger('placehold');\r\n\r\n\t\t\t\t\t// disable form submit\r\n\t\t\t\t\tvar $form = $file.parents('form');\r\n\t\t\t\t\t$form.find('button').addClass('--disabled');\r\n\t\t\t\t\t$file.data('working', true);\r\n\r\n\t\t\t\t\t// perform the actual file upload\r\n\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\turl : GLOBAL_URLPREFIX + $file.data('fileupload-url'),\r\n\t\t\t\t\t\ttype : 'POST',\r\n\t\t\t\t\t\tdata : formData,\r\n\t\t\t\t\t\tprocessData: false,  // tell jQuery not to process the data\r\n\t\t\t\t\t\tcontentType: false,  // tell jQuery not to set contentType\r\n\t\t\t\t\t\tsuccess : function(json) {\r\n\t\t\t\t\t\t\t$file.parents('.postauthoring__post-text-wrapper').find('.action-upload-file').trigger('upload-success', [file, json]);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\t\t// indicate not busy\r\n\t\t\t\t\t\t\t$file.trigger('upload-complete');\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\txhr: function() {  // custom xhr\r\n\t\t\t\t\t\t\tmyXhr = $.ajaxSettings.xhr();\r\n\t\t\t\t\t\t\tif(myXhr.upload){ // if upload property exists\r\n\t\t\t\t\t\t\t\tmyXhr.upload.addEventListener('progress', function(e) {\r\n\t\t\t\t\t\t\t\t\tvar percent = Math.ceil((e.loaded / e.total) * 100);\r\n\t\t\t\t\t\t\t\t\tconsole.log(percent);\r\n\t\t\t\t\t\t\t\t}, false); // progressbar\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn myXhr;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// 'upload' event abstract out 'success' callback so phonegap upload can tap into app functions\r\n\t\t\t$(this.element).on('upload-success', '.action-upload-file', function(e, file, json) {\r\n\t\t\t\t// register content change\r\n\t\t\t\t$(plugin.element).trigger('content-change');\r\n\r\n\t\t\t\t//var target = $(this).attr('href');\r\n\t\t\t\tvar target = $(this).data('target');\r\n\t\t\t\tvar $file = $(target);\r\n\r\n\t\t\t\tvar inputName = $file.siblings('input[type=hidden]').size() > 0 ? $file.siblings('input[type=hidden]').attr('name') : $file.attr('name');\r\n\t\t\t\t$file.val(null); // reset file input\r\n\t\t\t\t$file.attr('name', '');\r\n\t\t\t\t$file.data('field-name', inputName);\r\n\t\t\t\t$file.siblings('input[type=hidden]').remove();\r\n\t\t\t\t$('<input type=\"hidden\" readonly=\"readonly\" name=\"' + inputName + '\" value=\"' + json.file[0].path + '\" />').insertAfter($file);\r\n\r\n\t\t\t\t// indicate not busy\r\n\t\t\t\t$file.trigger('upload-complete');\r\n\r\n\t\t\t\t// insert thumbnail preview\r\n\t\t\t\tvar f = {\r\n\t\t\t\t\tabsolute: json.file[0].full,\r\n\t\t\t\t\ttype: file.type\r\n\t\t\t\t};\r\n\t\t\t\t$file.trigger('preview', [f, json.file[0].orientation]);\r\n\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\r\n\t\t\t// do stuff after upload complete\r\n\t\t\t$(this.element).on('upload-complete', '.postauthoring__file-input', function(e) {\r\n\t\t\t\tvar $file = $(this);\r\n\r\n\t\t\t\t// indicate not busy\r\n\t\t\t\t$file.data('working', false);\r\n\r\n\t\t\t\t// check form now\r\n\t\t\t\tvar $form = $file.parents('form');\r\n\t\t\t\tvar working = $form.find('input[type=file]').filter(function() {\r\n\t\t\t\t\treturn $(this).data('working') === true;\r\n\t\t\t\t});\r\n\t\t\t\tif(working.size() <= 0) {\r\n\t\t\t\t\t// re-enable form submit button\r\n\t\t\t\t\t$form.find('button[type=submit]').removeClass('--disabled');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\r\n\t\t\t// add upload preview event (after successful upload)\r\n\t\t\t$(this.element).on('preview', '.postauthoring__file-input', function(e, file, orientation) {\r\n\r\n\t\t\t\t// remove previous attachment\r\n\t\t\t\tplugin.removeAttachment();\r\n\r\n\t\t\t\t// create preview container\r\n\t\t\t\tvar $template = null;\r\n\t\t\t\tvar $preview = $('<div class=\"attachment-container\">' +\r\n\t\t\t\t\t'<input name=\"attachment[type]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[resource]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[description]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[title]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[source]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[url]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[shortened_url]\" type=\"hidden\">' +\r\n\t\t\t\t'</div>');\r\n\t\t\t\tvar $wrapper = $('<div class=\"postauthoring__attachment-wrapper\">');\r\n\t\t\t\t// add close button and preview\r\n\t\t\t\t$wrapper.append('<div class=\"postauthoring__attachment-wrapper__close-button\"><i class=\"fa fa-times\"></i></div>');\r\n\t\t\t\t$wrapper.append($preview);\r\n\t\t\t\t//$(plugin.element).find('.postauthoring__post').append($wrapper);\r\n\t\t\t\t$(plugin.element).find('.postauthoring__post .postauthoring__post-text-wrapper').after($wrapper);\r\n\r\n\t\t\t\t// create preview element by type\r\n\t\t\t\tswitch(file.type) {\r\n\t\t\t\t\tcase 'image/png':\r\n\t\t\t\t\tcase 'image/jpg':\r\n\t\t\t\t\tcase 'image/gif':\r\n\t\t\t\t\tcase 'image/jpeg':\r\n\t\t\t\t\t\t$template = $('<div class=\"attachment --image\">' +\r\n\t\t\t\t\t\t\t'<div class=\"attachment__content\">' +\r\n\t\t\t\t\t\t\t\t'<img src=\"\" alt=\"\" />' +\r\n\t\t\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t\t'</div>');\r\n\r\n\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\tif(file.absolute !== undefined) {\r\n\t\t\t\t\t\t\t$template.find('img').attr('src', file.absolute);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// use local file\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\t\tvar URLObject = window.URL || window.webkitURL;\r\n\t\t\t\t\t\t\tvar objectUrl = URLObject.createObjectURL(file);\r\n\r\n\t\t\t\t\t\t\t$template.find('img').attr('src', objectUrl);\r\n\t\t\t\t\t\t\tif(orientation != undefined) {\r\n\t\t\t\t\t\t\t\tvar img = $template.find('img').get(0);\r\n\t\t\t\t\t\t\t\timg.onload = function() {\r\n\t\t\t\t\t\t\t\t\t$template.find('img').orientate(orientation);\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$preview.find('input[name=attachment\\\\[type\\\\]]').val('image');\r\n\t\t\t\t\t\tplugin.togglePlatformState('image');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'video/mp4':\r\n\t\t\t\t\tcase 'video/avi':\r\n\t\t\t\t\tcase 'video/mov':\r\n\t\t\t\t\tcase 'video/quicktime':\r\n\t\t\t\t\tcase 'video/ogg':\r\n\t\t\t\t\t\t$template = $('<video width=\"100%\" controls>' +\r\n\t\t\t\t\t\t\t'<source src=\"\" type=\"\">' +\r\n\t\t\t\t\t\t\t'Your browser does not support HTML5 video.' +\r\n\t\t\t\t\t\t'</video>');\r\n\r\n\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\tif(file.absolute !== undefined) {\r\n\t\t\t\t\t\t\t$template.find('source').attr('src', file.absolute);\r\n\t\t\t\t\t\t\t$template.find('source').attr('type', file.type);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// use local file\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\t\tvar URLObject = window.URL || window.webkitURL;\r\n\t\t\t\t\t\t\tvar objectUrl = URLObject.createObjectURL(file);\r\n\t\t\t\t\t\t\tvar objectType = file.type;\r\n\r\n\t\t\t\t\t\t\t$template.find('source').attr('src', objectUrl);\r\n\t\t\t\t\t\t\t$template.find('source').attr('type', objectType);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$preview.find('input[name=attachment\\\\[type\\\\]]').val('video');\r\n\t\t\t\t\t\tplugin.togglePlatformState('video');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t$template.appendTo($preview);\r\n\r\n\t\t\t\tplugin.updateAnchorDownState();\r\n\t\t\t});\r\n\t\t},\r\n\t\tremoveAttachment: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\t$(plugin.element).find('.postauthoring__attachment-wrapper').remove();\r\n\t\t\tplugin.togglePlatformState('delete');\r\n\t\t\tplugin.updateAnchorDownState();\r\n\t\t},\r\n\t\ttogglePlatformState: function(attachmentType) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $items = $(plugin.element).find('.postauthoring__post-footer__account-lists .account-list');\r\n\r\n\t\t\t// disable all\r\n\t\t\t$items.addClass('--disabled');\r\n\r\n\t\t\t// all platforms\r\n\t\t\tvar platforms = ['facebook','twitter','linkedin','pinterest','youtube','instagram'];\r\n\t\t\tvar exclude = [];\r\n\t\t\tvar allowed = [];\r\n\t\t\tvar denied = [];\r\n\r\n\t\t\t// check allowed platforms\r\n\t\t\tvar $allowed = $('[name=allowed_platforms]');\r\n\t\t\tif($allowed.length) {\r\n\t\t\t\tallowed = $allowed.val().split(',');\r\n\t\t\t\texclude = $(platforms).not(allowed).get();\r\n\t\t\t}\r\n\t\t\t// check attachment\r\n\t\t\tswitch(attachmentType) {\r\n\t\t\t\tcase 'image':\r\n\t\t\t\t\tdenied = ['pinterest', 'youtube', 'instagram'];\r\n\t\t\t\t\tallowed = ['pinterest', 'instagram'];\r\n\t\t\t\t\tdenied = $(denied).not(allowed).get();\r\n\t\t\t\t\texclude = $(exclude).add(denied).get();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'video':\r\n\t\t\t\t\tdenied = ['pinterest', 'youtube', 'instagram'];\r\n\t\t\t\t\tallowed = ['youtube', 'instagram'];\r\n\t\t\t\t\tdenied = $(denied).not(allowed).get();\r\n\t\t\t\t\texclude = $(exclude).add(denied).get();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tdenied = ['pinterest', 'youtube', 'instagram'];\r\n\t\t\t\t\texclude = $(exclude).add(denied).get();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// filter and allow\r\n\t\t\t$items.filter(function() {\r\n\t\t\t\treturn exclude.indexOf($(this).data('platform')) == -1;\r\n\t\t\t}).removeClass('--disabled');\r\n\r\n\t\t\t// deselect accounts that are in the now disabled list\r\n\t\t\t$items.filter('.--disabled').each(function() {\r\n\t\t\t\t$(this).find('.account.--active').triggerHandler('click');\r\n\t\t\t});\r\n\t\t},\r\n\t\tgetPostText: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tvar content = htmlEntities($(plugin.element).find('#textarea_message_write').val());\r\n\t\t\tvar parts = content.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\").split(\"\\n\");\r\n\t\t\tfor(var i in parts) {\r\n\t\t\t\tparts[i] = '<p>' + (parts[i].length ? parts[i] : '<br />') + '</p>';\r\n\t\t\t}\r\n\t\t\tcontent = parts.join(\"\\n\");\r\n\r\n\t\t\treturn content;\r\n\t\t},\r\n\t\tgetPostTextCharacterLength: function() {\r\n\t\t\treturn $('.postauthoring__post-heading__informational-block__character-wrapper__character-counter').text();\r\n\t\t},\r\n\t\trevertPlatformText: function(element) {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\telement.removeClass('--changed').find('.post-panel-item__content__textbox').html(plugin.getPostText());\r\n\t\t\telement.find('.post-panel-item__heading__character').text(plugin.getPostTextCharacterLength());\r\n\t\t\telement.find('.post-panel-item__content__textbox').trigger('render-tags');\r\n\t\t},\r\n\t\tsetNewlyActivatedPlatformPost: function(element) {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tplugin.newlyActivatedPlatformPost = element;\r\n\t\t},\r\n\t\tgetNewlyActivatedPlatformPost: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\treturn plugin.newlyActivatedPlatformPost;\r\n\t\t},\r\n\t\tgetLinkedAccountSelectedInformation: function() {\r\n\t\t\tvar plugin = this,\r\n\t\t\t\taccountSelectedArray = {};\r\n\r\n\t\t\t$(plugin.getNewlyActivatedPlatformPost()).each(function(i) {\r\n\t\t\t\tvar platform = $(this).data('platform');\r\n\t\t\t\tvar iconClass = plugin.getPlatformIconClass(platform);\r\n\r\n\t\t\t\taccountSelectedArray[i] = {\r\n\t\t\t\t\tname: $(this).children('span.name').text(),\r\n\t\t\t\t\tplatform: platform,\r\n\t\t\t\t\tplatformClass: 'fa ' + iconClass,\r\n\t\t\t\t\tlinkedId: $(this).data('linked-id'),\r\n\t\t\t\t\t// other params\r\n\t\t\t\t\tsubId: $(this).data('sub-id') || '', // for facebook pages and pinterest boards\r\n\t\t\t\t\ttoken: $(this).data('access-token') || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\treturn accountSelectedArray;\r\n\t\t},\r\n\t\tgetPlatformIconClass: function(platform) {\r\n\t\t\tvar platformMap = {\r\n\t\t\t\tfacebook:  'fa-facebook-official',\r\n\t\t\t\ttwitter:   'fa-twitter',\r\n\t\t\t\tlinkedin:  'fa-linkedin',\r\n\t\t\t\tpinterest: 'fa-pinterest',\r\n\t\t\t\tyoutube:   'fa-youtube',\r\n\t\t\t\tinstagram: 'fa-instagram'\r\n\t\t\t};\r\n\t\t\treturn platformMap[platform];\r\n\t\t},\r\n\t\trenderCharacterCounter: function(element) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar length = element.find('.post-panel-item__content__textbox').realText().length;\r\n\t\t\tvar characterLength = (length != 1) ? length + ' characters' : length + ' characters';\r\n\r\n\t\t\t// For twitter platform post, if the character exceed 140, invalid and cant post\r\n\t\t\tif(element.hasClass('twitter')) {\r\n\t\t\t\tif(length > 140) {\r\n\t\t\t\t\telement.addClass('--invalid');\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.removeClass('--invalid');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telement.find('.post-panel-item__heading__character').text(characterLength);\r\n\t\t\tplugin.checkAllTwitterIfInvalid();\r\n\t\t},\r\n\t\tinvalidEmptyYoutubeOptions: function(element) {\r\n\t\t\tif(element.val().length < 1) {\r\n\t\t\t\telement.closest('.post-panel-item__option-item').addClass('--invalid');\r\n\t\t\t} else {\r\n\t\t\t\telement.closest('.post-panel-item__option-item').removeClass('--invalid');\r\n\t\t\t}\r\n\r\n\t\t\tvar youtubeInvalid = 2;\r\n\r\n\t\t\telement.closest('.post-panel-item__option-items').children().each(function() {\r\n\t\t\t\tif(!$(this).hasClass('--invalid')) {\r\n\t\t\t\t\tyoutubeInvalid -= 1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(youtubeInvalid > 0) {\r\n\t\t\t\telement.closest('.post-panel-item').addClass('--invalid');\r\n\t\t\t} else {\r\n\t\t\t\telement.closest('.post-panel-item').removeClass('--invalid');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckAllYoutubeIfInvalid: function() {\r\n\t\t\tvar plugin = this,\r\n\t\t\t\tyoutubeInvalidLimit = 0;\r\n\r\n\t\t\t$('.post-panel-item.youtube').each(function() {\r\n\t\t\t\tif($(this).hasClass('--invalid')) {\r\n\t\t\t\t\tyoutubeInvalidLimit++;\r\n\t\t\t\t}\r\n\t\t\t\tplugin.isYoutubeInvalid = (youtubeInvalidLimit > 0);\r\n\t\t\t});\r\n\t\t},\r\n\t\tcheckAllTwitterIfInvalid: function() {\r\n\t\t\tvar plugin = this,\r\n\t\t\t\ttwitterInvalidLimit = 0;\r\n\r\n\t\t\t$('.post-panel-item.twitter').each(function() {\r\n\t\t\t\tif($(this).hasClass('--invalid')) {\r\n\t\t\t\t\ttwitterInvalidLimit++;\r\n\t\t\t\t}\r\n\t\t\t\tplugin.isTwitterInvalid = (twitterInvalidLimit > 0);\r\n\t\t\t});\r\n\t\t},\r\n\t\ttoggleContinueButton: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// require social\r\n\t\t\tvar $requireSocial = $('.postauthoring [name=require_social]');\r\n\t\t\tvar require_social = $requireSocial.length > 0;\r\n\t\t\tvar hasSocial = $('.postauthoring .account-list .account.--active').length > 0;\r\n\r\n\t\t\t// button\r\n\t\t\tvar $button = $('.postauthoring__post-footer .postauthoring__post-footer__continue-button');\r\n\t\t\t// state\r\n\t\t\t$button.toggleClass('--disabled', !(!require_social || (require_social && hasSocial)));\r\n\t\t\t// text\r\n\t\t\tvar buttonText = $('.postauthoring [name=buttons]').val();\r\n\t\t\tif(!buttonText) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar key = hasSocial ? 'continue' : 'continue_empty';\r\n\t\t\t$button.find('span').text(JSON.parse(buttonText)[key]);\r\n\t\t},\r\n\t\ttoggleSubmitButton: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\t// button\r\n\t\t\tvar $button = $('.postauthoring__post-footer .postauthoring__post-footer__post-button');\r\n\t\t\t// state\r\n\t\t\t$button.toggleClass('--disabled', (plugin.isYoutubeInvalid || plugin.isTwitterInvalid));\r\n\t\t\t// text\r\n\t\t\tvar buttonText = $('.postauthoring [name=buttons]').val();\r\n\t\t\tif(!buttonText) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar key = 'post';\r\n\t\t\t$button.find('span').text(JSON.parse(buttonText)[key]);\r\n\t\t},\r\n\t\tupdateAnchorDownState: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $anchor = $('.postauthoring__anchordown');\r\n\t\t\tvar viewport = $('body').height();\r\n\t\t\tvar canvas   = $('.postauthoring__wrapper').height();\r\n\t\t\tvar buffer = 100;\r\n\t\t\tvar hasAttachment = $('.postauthoring__attachment-wrapper').size() > 0;\r\n\t\t\tvar hasAccounts = $('.postauthoring__post-panels .post-panel-item').size() > 0;\r\n\t\t\tvar isExpired = $anchor.hasClass('expired');\r\n\t\t\t// show anchor down if:\r\n\t\t\t// - canvas is at least 100px taller than the viewport; and\r\n\t\t\t// - if at least 1 account is selected; and\r\n\t\t\t// - an attachment is added; and\r\n\t\t\t// - doesn't have class 'expired'\r\n\t\t\tif(canvas > (viewport + buffer) && hasAccounts && hasAttachment && !isExpired) {\r\n\t\t\t\t$anchor.addClass('--active');\r\n\t\t\t} else {\r\n\t\t\t\t$anchor.removeClass('--active');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * facebook.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for facebook\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'facebook',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\t$(this.element).data('platform', pluginName);\r\n\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// activate\r\n\t\t\t$(this.element).on('click', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// mark as loading to ensure it doesn't load twice\r\n\t\t\t\tvar loading = $(plugin.element).data('facebook-loading');\r\n\t\t\t\tif(loading === true) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$(plugin.element).data('facebook-loading', true);\r\n\r\n\t\t\t\t// submit form\r\n\t\t\t\tplugin.showPages();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tshowPages: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar element = this.element;\r\n\r\n\t\t\t// get dialog object, we'll open this later\r\n\t\t\tvar $dialog = $('#' + $(this.element).data('dialog-content'));\r\n\t\t\tif($dialog.data('loaded')) {\r\n\t\t\t\t$(plugin.element).data('facebook-loading', false);\r\n\t\t\t\tplugin.initDialog($dialog, element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// ajax to return facebook pages\r\n\t\t\tif($(this.element).data('get-facebook-pages').length) {\r\n\t\t\t\t$.ajax($(this.element).data('get-facebook-pages'), {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\tif(json.pages == undefined) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// mark dialog as loaded\r\n\t\t\t\t\t\t// this should throttle back future api requests\r\n\t\t\t\t\t\t$dialog.data('loaded', true);\r\n\r\n\t\t\t\t\t\t// populate select pages dialog\r\n\t\t\t\t\t\tvar $list = $dialog.find('#facebook-pages-selection-list');\r\n\t\t\t\t\t\t$list.find('li:not(.--template)').remove();\r\n\t\t\t\t\t\tfor(var i in json.pages) {\r\n\t\t\t\t\t\t\tvar $template = $list.find('li.--template').clone();\r\n\t\t\t\t\t\t\tvar page = json.pages[i];\r\n\t\t\t\t\t\t\t$template.removeClass('--template');\r\n\t\t\t\t\t\t\t$template.data('id', page.id);\r\n\t\t\t\t\t\t\t$template.data('type', page.type);\r\n\t\t\t\t\t\t\t$template.data('token', page.access_token);\r\n\t\t\t\t\t\t\t$template.find('label').text(page.name);\r\n\t\t\t\t\t\t\t$list.append($template);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tplugin.initDialog($dialog, element);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcomplete: function() {\r\n\t\t\t\t\t\t// mark as loading to ensure it doesn't load twice\r\n\t\t\t\t\t\t$(plugin.element).data('facebook-loading', false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitDialog: function($dialog, element) {\r\n\r\n\t\t\t// show dialog\r\n\t\t\t$('.dialog').trigger('show', [$dialog]);\r\n\t\t\t$('.dialog').data('facebook-pages-trigger', $(element));\r\n\r\n\t\t\tif($dialog.data('initialised')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t$dialog.data('initialised', true);\r\n\r\n\t\t\t// selecting pages\r\n\t\t\t$('.dialog').on('click', '#facebook-pages-selection-list .entity', function(e) {\r\n\t\t\t\tvar val = $('.dialog').find('input[name=social\\\\[facebook\\\\]\\\\[pages\\\\]]').val();\r\n\t\t\t\tvar id = $(this).data('id') + '|' + $(this).data('type') + '|' + $(this).data('token');\r\n\t\t\t\tif($(this).hasClass('--active')) { // remove\r\n\t\t\t\t\tval = val.replace(',' + id + ',', ',');\r\n\t\t\t\t\tif(val == ',') {\r\n\t\t\t\t\t\tval = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { // add\r\n\t\t\t\t\tif(val.indexOf(',' + id + ',') == -1) {\r\n\t\t\t\t\t\tval = (val.length == 0 ? ',' : val);\r\n\t\t\t\t\t\tval = val + id + ',';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$('.dialog').find('input[name=social\\\\[facebook\\\\]\\\\[pages\\\\]]').val(val);\r\n\r\n\t\t\t\t// button state\r\n\t\t\t\t$('.dialog').find('.button.confirm-selection').toggleClass('--disabled', val.length == 0);\r\n\r\n\t\t\t\t$(this).toggleClass('--active');\r\n\t\t\t});\r\n\t\t\t$('.dialog').find('.button.confirm-selection').addClass('--disabled');\r\n\r\n\t\t\t// selecting pages\r\n\t\t\t$('.dialog').on('click', '.confirm-selection', function(e) {\r\n\t\t\t\tif($(this).parents('.dialog').find('#facebook-pages-selection-list').length == 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar $trigger = $('.dialog').data('facebook-pages-trigger');\r\n\t\t\t\tvar $input = $('.dialog').find('input[name=social\\\\[facebook\\\\]\\\\[pages\\\\]]').clone();\r\n\t\t\t\t$trigger.find('input[name=social\\\\[facebook\\\\]\\\\[pages\\\\]]').remove();\r\n\t\t\t\t$trigger.append($input);\r\n\t\t\t\t$trigger.trigger('select');\r\n\t\t\t});\r\n\r\n\t\t\t// cancel\r\n\t\t\t$('.dialog').on('click', '.cancel-selection', function(e) {\r\n\t\t\t\tif($(this).parents('.dialog').find('#facebook-pages-selection-list').length == 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar $trigger = $('.dialog').data('facebook-pages-trigger');\r\n\t\t\t\t$trigger.find('input[name=social\\\\[facebook\\\\]\\\\[pages\\\\]]').remove();\r\n\t\t\t\t$trigger.trigger('deselect');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * pinterest.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for pinterest\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'pinterest',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\t$(this.element).data('platform', pluginName);\r\n\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// activate\r\n\t\t\t$(this.element).on('click', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// mark as loading to ensure it doesn't load twice\r\n\t\t\t\tvar loading = $(plugin.element).data('pinterest-loading');\r\n\t\t\t\tif(loading === true) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$(plugin.element).data('pinterest-loading', true);\r\n\r\n\t\t\t\t// submit form\r\n\t\t\t\tplugin.showBoards();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tshowBoards: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar element = this.element;\r\n\r\n\t\t\t// get dialog object, we'll open this later\r\n\t\t\tvar $dialog = $('#' + $(this.element).data('dialog-content'));\r\n\t\t\tif($dialog.data('loaded')) {\r\n\t\t\t\t$(plugin.element).data('pinterest-loading', false);\r\n\t\t\t\tplugin.initDialog($dialog, element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// ajax to return pinterest boards\r\n\t\t\tif($(this.element).data('get-pinterest-boards').length) {\r\n\t\t\t\t$.ajax($(this.element).data('get-pinterest-boards'), {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\tif(json.boards == undefined) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// mark dialog as loaded\r\n\t\t\t\t\t\t// this should throttle back future api requests\r\n\t\t\t\t\t\t$dialog.data('loaded', true);\r\n\r\n\t\t\t\t\t\t// populate select boards dialog\r\n\t\t\t\t\t\tvar $list = $dialog.find('#pinterest-boards-selection-list');\r\n\t\t\t\t\t\t$list.find('li:not(.--template)').remove();\r\n\t\t\t\t\t\tfor(var i in json.boards) {\r\n\t\t\t\t\t\t\tvar $template = $list.find('li.--template').clone();\r\n\t\t\t\t\t\t\tvar board = json.boards[i];\r\n\t\t\t\t\t\t\t$template.removeClass('--template');\r\n\t\t\t\t\t\t\t$template.data('id', board.id);\r\n\t\t\t\t\t\t\t$template.find('label').text(board.name);\r\n\t\t\t\t\t\t\t$list.append($template);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tplugin.initDialog($dialog, element);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcomplete: function() {\r\n\t\t\t\t\t\t// mark as loading to ensure it doesn't load twice\r\n\t\t\t\t\t\t$(plugin.element).data('pinterest-loading', false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitDialog: function($dialog, element) {\r\n\r\n\t\t\t// show dialog\r\n\t\t\t$('.dialog').trigger('show', [$dialog]);\r\n\t\t\t$('.dialog').data('pinterest-boards-trigger', $(element));\r\n\r\n\t\t\tif($dialog.data('initialised')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t$dialog.data('initialised', true);\r\n\r\n\t\t\t// selecting boards\r\n\t\t\t$('.dialog').on('click', '#pinterest-boards-selection-list .entity', function(e) {\r\n\t\t\t\tvar val = $('.dialog').find('input[name=social\\\\[pinterest\\\\]\\\\[boards\\\\]]').val();\r\n\t\t\t\tvar id = $(this).data('id');\r\n\t\t\t\tif($(this).hasClass('--active')) { // remove\r\n\t\t\t\t\tval = val.replace(',' + $(this).data('id') + ',', ',');\r\n\t\t\t\t\tif(val == ',') {\r\n\t\t\t\t\t\tval = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { // add\r\n\t\t\t\t\tif(val.indexOf(',' + id + ',') == -1) {\r\n\t\t\t\t\t\tval = (val.length == 0 ? ',' : val);\r\n\t\t\t\t\t\tval = val + id + ',';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$('.dialog').find('input[name=social\\\\[pinterest\\\\]\\\\[boards\\\\]]').val(val);\r\n\r\n\t\t\t\t// button state\r\n\t\t\t\t$('.dialog').find('.button.confirm-selection').toggleClass('--disabled', val.length == 0);\r\n\r\n\t\t\t\t$(this).toggleClass('--active');\r\n\t\t\t});\r\n\t\t\t$('.dialog').find('.button.confirm-selection').addClass('--disabled');\r\n\r\n\t\t\t// selecting boards\r\n\t\t\t$('.dialog').on('click', '.confirm-selection', function(e) {\r\n\t\t\t\tif($(this).parents('.dialog').find('#pinterest-boards-selection-list').length == 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar $trigger = $('.dialog').data('pinterest-boards-trigger');\r\n\t\t\t\tvar $input = $('.dialog').find('input[name=social\\\\[pinterest\\\\]\\\\[boards\\\\]]').clone();\r\n\t\t\t\t$trigger.find('input[name=social\\\\[pinterest\\\\]\\\\[boards\\\\]]').remove();\r\n\t\t\t\t$trigger.append($input);\r\n\t\t\t\t$trigger.trigger('select');\r\n\t\t\t});\r\n\r\n\t\t\t// cancel\r\n\t\t\t$('.dialog').on('click', '.cancel-selection', function(e) {\r\n\t\t\t\tif($(this).parents('.dialog').find('#pinterest-boards-selection-list').length == 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar $trigger = $('.dialog').data('pinterest-boards-trigger');\r\n\t\t\t\t$trigger.find('input[name=social\\\\[pinterest\\\\]\\\\[boards\\\\]]').remove();\r\n\t\t\t\t$trigger.trigger('deselect');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * post-share.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for post-share objects\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'postshare',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $sharer = $(this.element);\r\n\r\n\t\t\t// find special buttons\r\n\t\t\t$sharer.find('.entity').each(function() {\r\n\t\t\t\t// facebook\r\n\t\t\t\tif($(this).hasClass('load-facebook-select-pages')) {\r\n\t\t\t\t\t$(this).facebook();\r\n\t\t\t\t}\r\n\t\t\t\t// pinterest\r\n\t\t\t\tif($(this).hasClass('load-pinterest-select-boards')) {\r\n\t\t\t\t\t$(this).pinterest();\r\n\t\t\t\t}\r\n\t\t\t\t// youtube\r\n\t\t\t\tif($(this).hasClass('load-youtube-options')) {\r\n\t\t\t\t\t$(this).youtube();\r\n\t\t\t\t}\r\n\t\t\t\t// facebook\r\n\t\t\t\tif($(this).hasClass('open-facebook-messagebox')) {\r\n\t\t\t\t\t$(this).on('click', function() {\r\n\t\t\t\t\t\t// check if there's a message box to scroll to\r\n\t\t\t\t\t\tif($('#textarea_message_write_fb').length > 0 && !$('#facebook_dropdown').hasClass('--active') && !$(this).hasClass('--active')) {\r\n\t\t\t\t\t\t\t$('#facebook-dropdown-trigger').trigger('click');\r\n\t\t\t\t\t\t\t$('html, body').animate({ scrollTop: 0 }, 100);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// twitter\r\n\t\t\t\tif($(this).hasClass('validate-twitter-post')) {\r\n\t\t\t\t\t$(this).twitter();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// selecting accounts\r\n\t\t\t$sharer.on('click', '.entity', function(e) {\r\n\t\t\t\tif($(this).hasClass('--active')) { // remove\r\n\t\t\t\t\t$(this).trigger('deselect');\r\n\t\t\t\t} else { // add\r\n\t\t\t\t\t$(this).trigger('select');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// toggle on\r\n\t\t\tvar $form = plugin.getForm();\r\n\t\t\t$sharer.on('select', '.entity', function(e) {\r\n\t\t\t\tvar val = $sharer.find('input[name=accounts]').val();\r\n\t\t\t\tvar id = $(this).data('id');\r\n\t\t\t\tif(val.indexOf(',' + id + ',') == -1) {\r\n\t\t\t\t\tval = (val.length == 0 ? ',' : val);\r\n\t\t\t\t\tval = val + id + ',';\r\n\t\t\t\t}\r\n\t\t\t\t$sharer.find('input[name=accounts]').val(val);\r\n\t\t\t\t$(this).addClass('--active');\r\n\t\t\t\t$form.trigger('check-socialmedia-state');\r\n\t\t\t});\r\n\r\n\t\t\t// toggle off\r\n\t\t\t$sharer.on('deselect', '.entity', function(e) {\r\n\t\t\t\tvar val = $sharer.find('input[name=accounts]').val();\r\n\t\t\t\tvar id = $(this).data('id');\r\n\t\t\t\tval = val.replace(',' + $(this).data('id') + ',', ',');\r\n\t\t\t\tif(val == ',') {\r\n\t\t\t\t\tval = '';\r\n\t\t\t\t}\r\n\t\t\t\t$sharer.find('input[name=accounts]').val(val);\r\n\t\t\t\t$(this).removeClass('--active');\r\n\t\t\t\t$form.trigger('check-socialmedia-state');\r\n\t\t\t});\r\n\r\n\t\t\t// share\r\n\t\t\t$form.on('click', '.button-holder .button.--sharer', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar $form = plugin.getForm();\r\n\r\n\t\t\t\t// platform specific validation\r\n\t\t\t\t// platforms post-submit-before event\r\n\t\t\t\tvar outcome = true;\r\n\r\n\t\t\t\tvar image   = $form.find('.attachment__content img').attr('src');\r\n\t\t\t\tvar message = $form.find('[name=message]').val();\r\n\t\t\t\tvar data    = $form.parse();\r\n\r\n\t\t\t\toutcome = plugin.submitBefore(image, data.message, data.attachment, data.social);\r\n\r\n\t\t\t\tif(!$.isEmptyObject(outcome)) {\r\n\t\t\t\t\t// show first dialog for now\r\n\t\t\t\t\tvar error = outcome.shift();\r\n\t\t\t\t\tvar dialog = error.dialog;\r\n\t\t\t\t\tvar $content = $('#' + dialog);\r\n\t\t\t\t\tvar callback = error.callback;\r\n\t\t\t\t\tvar social = (data.social !== undefined) ? data.social[error.platform] : undefined;\r\n\t\t\t\t\tvar $trigger = $form.find('.entity.--active').filter(function() {\r\n\t\t\t\t\t\treturn $(this).data('platform') == error.platform;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif($content.length) {\r\n\t\t\t\t\t\t$('.dialog').trigger('show', [$content, dialog, $trigger]);\r\n\t\t\t\t\t\tcallback($('.dialog'), $trigger, image, data.message, data.attachment, social);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// submission\r\n\t\t\t\t$.ajax($form.attr('action'), {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tdata: $form.parse(),\r\n\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\t//var media   = (json.post.attachment !== null) ? json.post.attachment.resource : null;\r\n\t\t\t\t\t\tvar media   = null;\r\n\t\t\t\t\t\t//var message = json.post.message_original;\r\n\t\t\t\t\t\tvar message = null;\r\n\r\n\t\t\t\t\t\t// increment?\r\n\t\t\t\t\t\t$form.find('.button-holder:has(button)').toggleClass('increment', json.points_increment);\r\n\r\n\t\t\t\t\t\t// submit after event\r\n\t\t\t\t\t\tplugin.submitAfter(media, message, true); // true: show success message\r\n\r\n\t\t\t\t\t\t// success\r\n\t\t\t\t\t\tplugin.reset();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// drop down open\r\n\t\t\t$sharer.on('opened', '.dropdown', function() {\r\n\t\t\t\t$('body').addClass('sharer-dropdown-active');\r\n\t\t\t});\r\n\r\n\t\t\t// drop down close\r\n\t\t\t$sharer.on('closed', '.dropdown', function() {\r\n\t\t\t\t$('body').removeClass('sharer-dropdown-active');\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tgetForm: function() {\r\n\t\t\tvar $sharer = $(this.element);\r\n\t\t\tvar $form = $sharer.find('form');\r\n\t\t\tif($form.size() == 0) {\r\n\t\t\t\t$form = $sharer.parents('form');\r\n\t\t\t}\r\n\t\t\treturn $form;\r\n\t\t},\r\n\r\n\t\treset: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// get proper parent\r\n\t\t\tvar $form = plugin.getForm();\r\n\r\n\t\t\t// list of fields to reset\r\n\t\t\tvar resetFields = [\r\n\t\t\t\t'message',\r\n\t\t\t\t'accounts'\r\n\t\t\t];\r\n\t\t\tvar $reset = $form.find(':input').filter(function() {\r\n\t\t\t\treturn $.inArray($(this).attr('name'), resetFields) !== -1;\r\n\t\t\t});\r\n\t\t\t$reset.each(function() {\r\n\t\t\t\tif($(this).attr('type') == 'checkbox' || $(this).attr('type') == 'radio') {\r\n\t\t\t\t\t$(this).prop('checked', false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(this).val('');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// remove active states on all entities\r\n\t\t\t$(this.element).find('.entity').removeClass('--active');\r\n\r\n\t\t\t// close dropdown\r\n\t\t\tvar ddTarget = $(this.element).find('.dropdown').data('dropdown-target');\r\n\t\t\tvar $trigger = $('.post-options__action.dropdown__trigger').filter(function() {\r\n\t\t\t\treturn $(this).attr('href') == '#' + ddTarget;\r\n\t\t\t});\r\n\t\t\tif($(this.element).find('.dropdown').hasClass('--active')) {\r\n\t\t\t\t$trigger.trigger('click');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsubmitAfter: function(image, message, showSuccess) {\r\n\t\t\tvar $sharer = $(this.element);\r\n\t\t\tvar $selected = $sharer.find('.entity.--active');\r\n\t\t\tvar shared = [];\r\n\t\t\t$selected.each(function() {\r\n\t\t\t\tvar key = $(this).find('.field__label').text();\r\n\r\n\t\t\t\tif($(this).hasClass('after-instagram-publish')) {\r\n\t\t\t\t\tconsole.log(' > instagram');\r\n\t\t\t\t\tpg_instagram(image, message); // this will open a dialog\r\n\t\t\t\t}\r\n\t\t\t\t// all other cases\r\n\t\t\t\telse {\r\n\t\t\t\t\tshared.push(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// if no extra actions to be taken, show \"shared\" message\r\n\t\t\tif($selected.size() > 0 && $selected.size() == shared.length && showSuccess === true) {\r\n\t\t\t\talert('This post has been shared.');\r\n\t\t\t}\r\n\r\n\t\t\t// increment\r\n\t\t\tvar $form = $sharer.find('form');\r\n\t\t\tif($form.size() == 0) {\r\n\t\t\t\t$form = $sharer.parents('form');\r\n\t\t\t}\r\n\t\t\t$form.find('.button-holder').trigger('increment');\r\n\t\t},\r\n\r\n\t\tsubmitBefore: function(image, message, attachment, social) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $sharer = $(this.element);\r\n\r\n\t\t\tvar validation = [];\r\n\t\t\t$sharer.find('.entity.--active').each(function() {\r\n\t\t\t\tvar platform = $(this).data('platform');\r\n\t\t\t\tvar socialData = (social !== undefined) ? social[platform] : undefined;\r\n\t\t\t\tvar results = plugin.validatePlatform(this, image, message, attachment, socialData);\r\n\t\t\t\tif(!$.isEmptyObject(results)) {\r\n\t\t\t\t\tvalidation.push(results);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn validation;\r\n\t\t},\r\n\r\n\t\tvalidatePlatform: function(trigger, image, message, attachment, social) {\r\n\t\t\tvar $platform = $(trigger);\r\n\t\t\tvar platform = $platform.data('platform');\r\n\t\t\tvar results = {};\r\n\t\t\tif($platform.data('plugin_' + platform) !== undefined && $platform.data('plugin_' + platform).validate !== undefined) {\r\n\t\t\t\tvar results = $platform.data('plugin_' + platform).validate(image, message, attachment, social);\r\n\t\t\t\tif(!$.isEmptyObject(results)) {\r\n\t\t\t\t\tresults = $.extend({ platform : platform }, results);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * post-write.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for post-write objects\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'postwrite',\r\n\t\tdefaults = {\r\n\t\t\tinjectTarget: function(element) {\r\n\t\t\t\tvar $ele = $(element);\r\n\t\t\t\treturn $($ele.data('target'));\r\n\t\t\t},\r\n\t\t\tajax: 'default', // 'default' = ajax if file field not present\r\n\t\t\tinjectMethod: 'prepend',\r\n\t\t\tsuccess: $.noop,\r\n\t\t\trequireSocialMedia: false,\r\n\t\t\tautosave: false,\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// auto suggest entities\r\n\t\t\t$(this.element).find('textarea').tagger();\r\n\r\n\t\t\t// are you sure\r\n\t\t\tif($(this.element).data('areyousure-message') != undefined) {\r\n\t\t\t\t$(this.element).areYouSure({\r\n\t\t\t\t\tmessage: $(this.element).data('areyousure-message')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// init dropdowns\r\n\t\t\t$(this.element).find('.dropdown').dropdown();\r\n\r\n\t\t\t// init post share\r\n\t\t\t$(this.element).find('.post-options__sharing').postshare();\r\n\r\n\t\t\t// init character counter\r\n\t\t\t$(this.element).find('.character-counter').characterCounter();\r\n\r\n\t\t\t// post options attachments\r\n\t\t\t// http://www.html5rocks.com/en/tutorials/getusermedia/intro/\r\n\t\t\t$(this.element).find('.post-options__file-trigger').on('click', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar target = $(this).attr('href');\r\n\t\t\t\tvar $file = $(target);\r\n\r\n\t\t\t\t// phonegap or HTML input?\r\n\t\t\t\t//if(typeof(pg_getMedia) !== 'undefined') {\r\n\t\t\t\tif(is_phonegap) {\r\n\t\t\t\t\tpg_getMedia($(this), $file, function(url, $trigger, $file) {\r\n\t\t\t\t\t\tpg_uploadMedia(url, $trigger, $file);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$file.trigger('click');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(this.element).on('change', '.post-options__file-input', function(e) {\r\n\t\t\t\tvar $file = $(this);\r\n\t\t\t\tif($file.attr('name') == '') {\r\n\t\t\t\t\t$file.attr('name', $file.data('field-name'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar files = e.target.files;\r\n\t\t\t\tfor(var i = 0, f; f = files[i]; i++) {\r\n\t\t\t\t\t$(this).addClass('--has-file');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if live upload attributes found, upload\r\n\t\t\t\tvar $file = $(this);\r\n\t\t\t\tif($file.data('fileupload-url')) {\r\n\t\t\t\t\t$file.trigger('upload', [files[0]]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(this.element).on('upload', '.post-options__file-input', function(e, file) {\r\n\t\t\t\tvar $file = $(this);\r\n\t\t\t\tname = file.name;\r\n\t\t\t\tsize = file.size;\r\n\t\t\t\ttype = file.type;\r\n\r\n\t\t\t\tvar types = [\r\n\t\t\t\t\t'image/png',\r\n\t\t\t\t\t'image/jpg',\r\n\t\t\t\t\t'image/gif',\r\n\t\t\t\t\t'image/jpeg',\r\n\t\t\t\t\t'video/mp4',\r\n\t\t\t\t\t'video/avi',\r\n\t\t\t\t\t'video/mov',\r\n\t\t\t\t\t'video/quicktime',\r\n\t\t\t\t\t'video/ogg'\r\n\t\t\t\t];\r\n\r\n\t\t\t\t// file present?\r\n\t\t\t\tif(file.name.length < 1) {\r\n\t\t\t\t}\r\n\t\t\t\t// check size\r\n\t\t\t\telse if(file.size > 40 * 1024 * 1024) {\r\n\t\t\t\t\talert(\"File is too big\");\r\n\t\t\t\t}\r\n\t\t\t\t// check file type\r\n\t\t\t\telse if(types.indexOf(file.type) === -1) {\r\n\t\t\t\t\talert('File format \"' + file.type + '\" not supported');\r\n\t\t\t\t}\r\n\t\t\t\t// ok to upload\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar formData = new FormData();\r\n\t\t\t\t\tformData.append('file', file);\r\n\t\t\t\t\tformData.append('_token', $file.parents('form').find('input[name=_token]').val());\r\n\r\n\t\t\t\t\t// insert thumbnail preview\r\n\t\t\t\t\t$file.trigger('placehold');\r\n\r\n\t\t\t\t\t// disable form submit\r\n\t\t\t\t\tvar $form = $file.parents('form');\r\n\t\t\t\t\t$form.find('button').addClass('--disabled');\r\n\t\t\t\t\t$file.data('working', true);\r\n\r\n\t\t\t\t\t// perform the actual file upload\r\n\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\turl : GLOBAL_URLPREFIX + $file.data('fileupload-url'),\r\n\t\t\t\t\t\ttype : 'POST',\r\n\t\t\t\t\t\tdata : formData,\r\n\t\t\t\t\t\tprocessData: false,  // tell jQuery not to process the data\r\n\t\t\t\t\t\tcontentType: false,  // tell jQuery not to set contentType\r\n\t\t\t\t\t\tsuccess : function(json) {\r\n\t\t\t\t\t\t\t$file.parents('.post-options__group').find('.post-options__file-trigger').trigger('upload-success', [file, json]);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\t\t// indicate not busy\r\n\t\t\t\t\t\t\t$file.trigger('upload-complete');\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\txhr: function() {  // custom xhr\r\n\t\t\t\t\t\t\tmyXhr = $.ajaxSettings.xhr();\r\n\t\t\t\t\t\t\tif(myXhr.upload){ // if upload property exists\r\n\t\t\t\t\t\t\t\tmyXhr.upload.addEventListener('progress', function(e) {\r\n\t\t\t\t\t\t\t\t\tvar percent = Math.ceil((e.loaded / e.total) * 100);\r\n\t\t\t\t\t\t\t\t\tconsole.log(percent);\r\n\t\t\t\t\t\t\t\t}, false); // progressbar\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn myXhr;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// 'upload' event abstract out 'success' callback so phonegap upload can tap into app functions\r\n\t\t\t$(this.element).on('upload-success', '.post-options__file-trigger', function(e, file, json) {\r\n\t\t\t\t// register content change\r\n\t\t\t\t$(plugin.element).trigger('content-change');\r\n\r\n\t\t\t\tvar target = $(this).attr('href');\r\n\t\t\t\tvar $file = $(target);\r\n\r\n\t\t\t\tvar inputName = $file.siblings('input[type=hidden]').size() > 0 ? $file.siblings('input[type=hidden]').attr('name') : $file.attr('name');\r\n\t\t\t\t$file.val(null); // reset file input\r\n\t\t\t\t$file.attr('name', '');\r\n\t\t\t\t$file.data('field-name', inputName);\r\n\t\t\t\t$file.siblings('input[type=hidden]').remove();\r\n\t\t\t\t$('<input type=\"hidden\" readonly=\"readonly\" name=\"' + inputName + '\" value=\"' + json.file[0].path + '\" />').insertAfter($file);\r\n\r\n\t\t\t\t// indicate not busy\r\n\t\t\t\t$file.trigger('upload-complete');\r\n\r\n\t\t\t\t// insert thumbnail preview\r\n\t\t\t\t//$file.trigger('preview', [file, json.file[0].orientation]);\r\n\t\t\t\tvar f = {\r\n\t\t\t\t\tabsolute: json.file[0].full,\r\n\t\t\t\t\ttype: file.type\r\n\t\t\t\t};\r\n\t\t\t\t$file.trigger('preview', [f, json.file[0].orientation]);\r\n\t\t\t});\r\n\r\n\t\t\t// do stuff after upload complete\r\n\t\t\t$(this.element).on('upload-complete', '.post-options__file-input', function(e) {\r\n\t\t\t\tvar $file = $(this);\r\n\r\n\t\t\t\t// indicate not busy\r\n\t\t\t\t$file.data('working', false);\r\n\r\n\t\t\t\t// check form now\r\n\t\t\t\tvar $form = $file.parents('form');\r\n\t\t\t\tvar working = $form.find('input[type=file]').filter(function() {\r\n\t\t\t\t\treturn $(this).data('working') === true;\r\n\t\t\t\t});\r\n\t\t\t\tif(working.size() <= 0) {\r\n\t\t\t\t\t// re-enable form submit button\r\n\t\t\t\t\t$form.find('button[type=submit]').removeClass('--disabled');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// add upload preview event (after successful upload)\r\n\t\t\t$(this.element).on('preview', '.post-options__file-input', function(e, file, orientation) {\r\n\t\t\t\t$(this).parents('.post-options').siblings('.attachment-container').remove();\r\n\r\n\t\t\t\tvar $preview = $('<div class=\"attachment-container\">' +\r\n\t\t\t\t\t'<input name=\"attachment[type]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[resource]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[description]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[title]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[source]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[url]\" type=\"hidden\">' +\r\n\t\t\t\t\t'<input name=\"attachment[shortened_url]\" type=\"hidden\">' +\r\n\t\t\t\t'</div>').insertAfter($(this).parents('.post-options').siblings('.post-write__message'));\r\n\r\n\t\t\t\tswitch(file.type) {\r\n\t\t\t\t\tcase 'image/png':\r\n\t\t\t\t\tcase 'image/jpg':\r\n\t\t\t\t\tcase 'image/gif':\r\n\t\t\t\t\tcase 'image/jpeg':\r\n\t\t\t\t\t\tvar $template = $('<div class=\"attachment --image\">' +\r\n\t\t\t\t\t\t\t'<div class=\"attachment__content\">' +\r\n\t\t\t\t\t\t\t\t'<img src=\"\" alt=\"\" />' +\r\n\t\t\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t\t'</div>');\r\n\r\n\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\tif(file.absolute !== undefined) {\r\n\t\t\t\t\t\t\t$template.find('img').attr('src', file.absolute);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// use local file\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\t\tvar URLObject = window.URL || window.webkitURL;\r\n\t\t\t\t\t\t\tvar objectUrl = URLObject.createObjectURL(file);\r\n\r\n\t\t\t\t\t\t\t$template.find('img').attr('src', objectUrl);\r\n\t\t\t\t\t\t\tif(orientation != undefined) {\r\n\t\t\t\t\t\t\t\tvar img = $template.find('img').get(0);\r\n\t\t\t\t\t\t\t\timg.onload = function() {\r\n\t\t\t\t\t\t\t\t\t$template.find('img').orientate(orientation);\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$preview.find('input[name=attachment\\\\[type\\\\]]').val('image');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'video/mp4':\r\n\t\t\t\t\tcase 'video/avi':\r\n\t\t\t\t\tcase 'video/mov':\r\n\t\t\t\t\tcase 'video/quicktime':\r\n\t\t\t\t\tcase 'video/ogg':\r\n\t\t\t\t\t\tvar $template = $('<video width=\"100%\" controls>' +\r\n\t\t\t\t\t\t\t'<source src=\"\" type=\"\">' +\r\n\t\t\t\t\t\t\t'Your browser does not support HTML5 video.' +\r\n\t\t\t\t\t\t'</video>');\r\n\r\n\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\tif(file.absolute !== undefined) {\r\n\t\t\t\t\t\t\t$template.find('source').attr('src', file.absolute);\r\n\t\t\t\t\t\t\t$template.find('source').attr('type', file.type);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// use local file\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// generate thumbnail\r\n\t\t\t\t\t\t\tvar URLObject = window.URL || window.webkitURL;\r\n\t\t\t\t\t\t\tvar objectUrl = URLObject.createObjectURL(file);\r\n\t\t\t\t\t\t\tvar objectType = file.type;\r\n\r\n\t\t\t\t\t\t\t$template.find('source').attr('src', objectUrl);\r\n\t\t\t\t\t\t\t$template.find('source').attr('type', objectType);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$preview.find('input[name=attachment\\\\[type\\\\]]').val('video');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t$template.appendTo($preview);\r\n\t\t\t});\r\n\r\n\t\t\t// post require social media\r\n\t\t\tvar $form = $(this.element);\r\n\t\t\t$(this.element).on('check-socialmedia-state', function() {\r\n\t\t\t\tif(plugin.options.requireSocialMedia === false) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar $entities = $form.find('.entity.--active');\r\n\t\t\t\t$form.find('[type=submit]').toggleClass('--disabled', $entities.size() == 0);\r\n\t\t\t\t$('.gig-post-submit').toggleClass('--disabled', $entities.size() == 0);\r\n\t\t\t});\r\n\t\t\t$(this.element).on('click', '.entity', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t$form.trigger('check-socialmedia-state');\r\n\t\t\t});\r\n\t\t\t$form.trigger('check-socialmedia-state');\r\n\r\n\t\t\t// post submission\r\n\t\t\t$(this.element).on('submit', function(e) {\r\n\t\t\t\t//var plugin = this;\r\n\t\t\t\tvar element = plugin.element;\r\n\r\n\t\t\t\t// do ajax if file inputs aren't present\r\n\t\t\t\tvar doAjax = plugin.options.ajax;\r\n\t\t\t\tif(doAjax == 'default') {\r\n\t\t\t\t\t//doAjax = $(element).find('input[type=file]').size() == 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(doAjax === false) {\r\n\t\t\t\t\tvar outcome = plugin.preSubmit();\r\n\t\t\t\t\tif(outcome === false) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// submit form\r\n\t\t\t\tplugin.submitPost();\r\n\t\t\t});\r\n\r\n\t\t\t// paste link as attachment\r\n\t\t\t$(this.element).find('textarea').on('paste', function(e) {\r\n\t\t\t\tvar $ele = $(this);\r\n\r\n\t\t\t\t// get clipboard data\r\n\t\t\t\tvar data = null;\r\n\t\t\t\t/*if(e.originalEvent.clipboardData !== undefined) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdata = e.originalEvent.clipboardData.getData('Text') || null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\tdata = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(window.clipboardData !== undefined) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdata = window.clipboardData.getData('Text') || null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\tdata = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\tdata = getClipboardData(e);\r\n\r\n\t\t\t\t// get alternate value if clipboard is not accessible\r\n\t\t\t\tif(data == null) {\r\n\t\t\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t\t\tvar dataAlt = $ele.val();\r\n\t\t\t\t\t\t//alert('fallback method');\r\n\t\t\t\t\t\t$ele.trigger('pastecomplete', [dataAlt]);\r\n\t\t\t\t\t}, 220);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//alert('normal method');\r\n\t\t\t\t\t$ele.trigger('pastecomplete', [data]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t$(this.element).find('textarea').on('pastecomplete', function(e, data) {\r\n\t\t\t\t// get value of current element if data is null\r\n\t\t\t\tif(data == null) {\r\n\t\t\t\t\tdata = $(this).val();\r\n\t\t\t\t}\r\n\t\t\t\t//alert(data);\r\n\r\n\t\t\t\t// get first detected url in string and load attachment from it\r\n\t\t\t\tvar urlRegex = '(?!mailto:)(?:(?:http|https|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?';\r\n\t\t\t\tvar url = new RegExp(urlRegex, 'ig');\r\n\t\t\t\tvar matches = data.match(url);\r\n\r\n\t\t\t\t// create attachment\r\n\t\t\t\tif(matches) {\r\n\t\t\t\t\t//alert('url \"' + matches[0] + '\" detected');\r\n\t\t\t\t\tplugin.addAttachment(matches[0]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// register content change\r\n\t\t\t$(this.element).on('content-change', function() {\r\n\t\t\t\tvar $write = $(this);\r\n\r\n\t\t\t\t// attach autosave event\r\n\t\t\t\tif(plugin.options.autosave == true) {\r\n\t\t\t\t\tconsole.log('invoke autosave waiter');\r\n\r\n\t\t\t\t\tvar t = null;\r\n\t\t\t\t\tif($write.data('autosave-waiter') == undefined || $write.data('autosave-waiter') == null) {\r\n\t\t\t\t\t\tif($write.data('first-autosave') == undefined) {\r\n\t\t\t\t\t\t\tconsole.log('60 seconds');\r\n\t\t\t\t\t\t\t// delay first autosave for 60 seconds\r\n\t\t\t\t\t\t\tt = setTimeout(function() {\r\n\t\t\t\t\t\t\t\t$write.data('autosave-waiter', null);\r\n\t\t\t\t\t\t\t\t$write.data('first-autosave', true);\r\n\t\t\t\t\t\t\t\t$write.trigger('autosave');\r\n\t\t\t\t\t\t\t\tconsole.log('perform autosave');\r\n\t\t\t\t\t\t\t}, 60000);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.log('10 seconds');\r\n\t\t\t\t\t\t\tt = setTimeout(function() {\r\n\t\t\t\t\t\t\t\t$write.data('autosave-waiter', null);\r\n\t\t\t\t\t\t\t\t$write.data('first-autosave', false);\r\n\t\t\t\t\t\t\t\t$write.trigger('autosave');\r\n\t\t\t\t\t\t\t\tconsole.log('perform autosave');\r\n\t\t\t\t\t\t\t}, 10000);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$write.data('autosave-waiter', t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(plugin.options.autosave == true) {\r\n\r\n\t\t\t\t// autosave\r\n\t\t\t\t$(this.element).on('autosave', function() {\r\n\t\t\t\t\tplugin.autosave();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t$(this.element).find('textarea').on('input', function() {\r\n\t\t\t\t// register content change\r\n\t\t\t\t$(plugin.element).trigger('content-change');\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\taddAttachment: function(url) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar element = this.element;\r\n\r\n\t\t\t// ajax to return url info\r\n\t\t\tif($(this.element).data('attachment-analyser').length) {\r\n\t\t\t\t$.ajax($(this.element).data('attachment-analyser'), {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t_token: $(this.element).find(':input[name=_token]').val(),\r\n\t\t\t\t\t\ta: url\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsuccess: function(html) {\r\n\t\t\t\t\t\t// register content change\r\n\t\t\t\t\t\t$(element).trigger('content-change');\r\n\r\n\t\t\t\t\t\t// replace attachment\r\n\t\t\t\t\t\t$(element).find('.attachment-container').remove();\r\n\t\t\t\t\t\t$(element).find('.post-write__message').after(html);\r\n\r\n\t\t\t\t\t\t// remove any media uploads from attachments\r\n\t\t\t\t\t\tvar $ff = $(element).find('input[name=message_file]');\r\n\t\t\t\t\t\tif($ff.is('[type=hidden]')) {\r\n\t\t\t\t\t\t\t$ff.remove();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$ff.wrap('<form>').closest('form').get(0).reset();\r\n\t\t\t\t\t\t\t$ff.unwrap();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tautosave: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar $write = $(this.element);\r\n\r\n\t\t\t// don't continue if autosave url not specified\r\n\t\t\tif($write.data('autosave-url') == null || $write.data('autosave-url').length <= 10) {\r\n\t\t\t\tconsole.log('Autosave URL not specified');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// get autosave url\r\n\t\t\tvar autosaveUrl = $write.data('autosave-url');\r\n\r\n\t\t\t// ajax it up\r\n\t\t\t$.ajax(autosaveUrl, {\r\n\t\t\t\tmethod: $(this.element).attr('method') || 'POST',\r\n\t\t\t\tdata: $(this.element).serialize(),\r\n\t\t\t\tsuccess: function(html) {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// validate post before submitting\r\n\t\tpreSubmit: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// validation\r\n\t\t\t// - requires text; or\r\n\t\t\t// - requires attachment\r\n\t\t\tif($(this.element).find('[name=message]').val().trim().length == 0 &&\r\n\t\t\t\t$(this.element).find('.attachment-container').length == 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// platform specific validation\r\n\t\t\t// platforms post-submit-before event\r\n\t\t\tvar outcome = true;\r\n\t\t\tif($(plugin.element).find('.post-options__sharing').length) {\r\n\t\t\t\tvar $form   = $(plugin.element);\r\n\t\t\t\tvar image   = $form.find('.attachment__content img').attr('src');\r\n\t\t\t\tvar message = $form.find('[name=message]').val();\r\n\t\t\t\tvar data    = $form.parse();\r\n\r\n\t\t\t\tvar sharePlugin = $form.find('.post-options__sharing').data('plugin_postshare');\r\n\t\t\t\toutcome = sharePlugin.submitBefore(image, data.message, data.attachment, data.social);\r\n\r\n\t\t\t\tif(!$.isEmptyObject(outcome)) {\r\n\t\t\t\t\t// show first dialog for now\r\n\t\t\t\t\tvar error = outcome.shift();\r\n\t\t\t\t\tvar dialog = error.dialog;\r\n\t\t\t\t\tvar $content = $('#' + dialog);\r\n\t\t\t\t\tvar callback = error.callback;\r\n\t\t\t\t\tvar social = (data.social !== undefined) ? data.social[error.platform] : undefined;\r\n\t\t\t\t\tvar $trigger = $form.find('.entity.--active').filter(function() {\r\n\t\t\t\t\t\treturn $(this).data('platform') == error.platform;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif($content.length) {\r\n\t\t\t\t\t\t$('.dialog').trigger('show', [$content, dialog, $trigger]);\r\n\t\t\t\t\t\tcallback($('.dialog'), $trigger, image, data.message, data.attachment, social);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tsubmitPost: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tvar outcome = plugin.preSubmit();\r\n\t\t\tif(outcome === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// ajax it up\r\n\t\t\t$.ajax($(this.element).attr('action'), {\r\n\t\t\t\tmethod: $(this.element).attr('method') || 'POST',\r\n\t\t\t\tdata: $(this.element).serialize(),\r\n\t\t\t\tsuccess: function(html) {\r\n\t\t\t\t\t// clear form\r\n\t\t\t\t\tplugin.resetForm();\r\n\r\n\t\t\t\t\t// platforms post-submit-after event\r\n\t\t\t\t\tif($(plugin.element).find('.post-options__sharing').length) {\r\n\t\t\t\t\t\tvar image   = $(html).find('.attachment__content img').attr('src');\r\n\t\t\t\t\t\tvar message = $(html).find('.post__message__content').text();\r\n\t\t\t\t\t\t$(plugin.element).find('.post-options__sharing').data('plugin_postshare').submitAfter(image, message);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// sharing options\r\n\t\t\t\t\tif($(plugin.element).find('.post-options__sharing').length) {\r\n\t\t\t\t\t\t$(plugin.element).find('.post-options__sharing').data('plugin_postshare').reset();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// inject new post\r\n\t\t\t\t\tvar $item = plugin.inject(html);\r\n\r\n\t\t\t\t\t// init post\r\n\t\t\t\t\t$item.post();\r\n\r\n\t\t\t\t\t// call callbacks\r\n\t\t\t\t\tplugin.options.success($item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tinject: function(html) {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tvar $target = plugin.getInjectTarget();\r\n\t\t\tvar $item   = $(html).addClass('--injected');\r\n\t\t\tif(plugin.options.injectMethod == 'prepend') {\r\n\t\t\t\t$target.prepend($item);\r\n\t\t\t} else if(plugin.options.injectMethod == 'append') {\r\n\t\t\t\t$target.append($item);\r\n\t\t\t}\r\n\r\n\t\t\t// remove injected class\r\n\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t$item.removeClass('--injected');\r\n\t\t\t}, 100);\r\n\r\n\t\t\t// init incrementer, making sure all child elements have it too\r\n\t\t\t$item.add($item.find('.incrementer')).increment();\r\n\t\t\t$item.trigger('increment');\r\n\r\n\t\t\treturn $item;\r\n\t\t},\r\n\r\n\t\tresetForm: function() {\r\n\t\t\t// list of fields to reset\r\n\t\t\tvar resetFields = [\r\n\t\t\t\t'message'\r\n\t\t\t];\r\n\t\t\tvar $reset = $(this.element).find(':input').filter(function() {\r\n\t\t\t\treturn $.inArray($(this).attr('name'), resetFields) !== -1;\r\n\t\t\t});\r\n\t\t\t$reset.each(function() {\r\n\t\t\t\tif($(this).attr('type') == 'checkbox' || $(this).attr('type') == 'radio') {\r\n\t\t\t\t\t$(this).prop('checked', false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(this).val('');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// reset character counters\r\n\t\t\tvar $counters = $(this.element).find('.character-counter');\r\n\t\t\t$counters.each(function() {\r\n\t\t\t\tif($(this).data('plugin_characterCounter')) {\r\n\t\t\t\t\t$(this).data('plugin_characterCounter').refresh();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// remove attachment container\r\n\t\t\t$(this.element).find('.attachment-container').remove();\r\n\r\n\t\t\t// remove social media specific fields\r\n\t\t\t$(this.element).find('input[name^=social\\\\[]').remove();\r\n\t\t},\r\n\r\n\t\t// helpers\r\n\r\n\t\tgetInjectTarget: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tvar target = plugin.options.injectTarget;\r\n\t\t\tvar $target = null;\r\n\r\n\t\t\tif(typeof(target) == 'function') {\r\n\t\t\t\t$target = target(this.element);\r\n\t\t\t} else if(typeof(target) == 'string') {\r\n\t\t\t\t$target = $(plugin.options.injectTarget);\r\n\t\t\t}\r\n\t\t\treturn $target;\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * post.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for post objects\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'post',\r\n\t\tdefaults = {\r\n\t\t\topenComments: false\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// init post comments\r\n\t\t\t$(this.element).find('.comment-write form').commentwrite();\r\n\r\n\t\t\t// post options\r\n\t\t\t$(this.element).find('.dropdown').dropdown();\r\n\r\n\t\t\t// post share\r\n\t\t\t$(this.element).find('.post-options__sharing').postshare();\r\n\r\n\t\t\t// open comments\r\n\t\t\tif(this.options.openComments === true) {\r\n\t\t\t\t$(this.element).find('.post-options__action.dropdown__trigger.comments').trigger('click');\r\n\t\t\t}\r\n\r\n\t\t\t// like\r\n\t\t\t$(this.element).on('click', '.like', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar $post = $(this).parents('.post');\r\n\r\n\t\t\t\t// ajax it up\r\n\t\t\t\t$.ajax($(this).data('url'), {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t_token: $('input[name=_token]').val()\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\t// update counter\r\n\t\t\t\t\t\t$post.find('.like__counter').text(json.counter);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// other options\r\n\t\t\t$(this.element).on('click', '.post-options__drop .dialog-action, .post-action', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar $trigger = $(this);\r\n\t\t\t\tvar $post = $trigger.parents('.post');\r\n\t\t\t\tvar dialog = $trigger.attr('href');\r\n\t\t\t\tvar action = $trigger.data('action-url');\r\n\r\n\t\t\t\t// close current drop down\r\n\t\t\t\t$('body').triggerHandler('click');\r\n\r\n\t\t\t\t// open dialog\r\n\t\t\t\tvar $content = $(dialog);\r\n\t\t\t\t$('.dialog').trigger('show', [$content, dialog, $trigger,\r\n\t\t\t\t\tfunction(content, id, trigger) {\r\n\t\t\t\t\t\t// reset input fields\r\n\t\t\t\t\t\t$('.dialog').find(':input.action-param').val('');\r\n\t\t\t\t\t\t// bind data to dialogs\r\n\t\t\t\t\t\tvar data = $(trigger).data('dialog-data');\r\n\t\t\t\t\t\tfor(var key in data) {\r\n\t\t\t\t\t\t\tvar val = data[key];\r\n\t\t\t\t\t\t\tvar $obj = $(':input[data-bind=' + key + ']');\r\n\t\t\t\t\t\t\tif($obj.length == 0) {\r\n\t\t\t\t\t\t\t\t$('[data-bind=' + key + ']').text(val);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$obj.val(val);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// confirmation of action\r\n\t\t\t\t\t\tvar callback = function(e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar action = $(this).data('action-url');\r\n\t\t\t\t\t\t\tvar title = $('.dialog').find('[name=action-complete-title]').val();\r\n\t\t\t\t\t\t\tvar message = $('.dialog').find('[name=action-complete-message]').val();\r\n\t\t\t\t\t\t\tvar close = $('.dialog').find('[name=action-complete-close]').val();\r\n\t\t\t\t\t\t\tvar $data = $('.dialog').find(':input.action-param');\r\n\t\t\t\t\t\t\tvar data = {};\r\n\t\t\t\t\t\t\t$data.each(function() {\r\n\t\t\t\t\t\t\t\tvar name = $(this).attr('name');\r\n\t\t\t\t\t\t\t\tdata[name] = $(this).val();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tdata._token = $('input[name=_token]').val();\r\n\t\t\t\t\t\t\t// ajax it up\r\n\t\t\t\t\t\t\t$.ajax(action, {\r\n\t\t\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\t\t\t\t// hide current popup\r\n\t\t\t\t\t\t\t\t\t$('.dialog').trigger('hide');\r\n\t\t\t\t\t\t\t\t\t// show action complete dialog\r\n\t\t\t\t\t\t\t\t\t/*var t = setTimeout(function() {\r\n\t\t\t\t\t\t\t\t\t\tvar $success = $('#action-complete-dialog');\r\n\t\t\t\t\t\t\t\t\t\t$('.dialog').trigger('show', [$success, 'action-complete', null, function() {\r\n\t\t\t\t\t\t\t\t\t\t\t$(this).find('[data-bind=action-complete-title]').text(title);\r\n\t\t\t\t\t\t\t\t\t\t\t$(this).find('[data-bind=action-complete-message]').text(message);\r\n\t\t\t\t\t\t\t\t\t\t\t$(this).find('.action-complete-close').text(close);\r\n\t\t\t\t\t\t\t\t\t\t}]);\r\n\t\t\t\t\t\t\t\t\t}, 2600);*/\r\n\t\t\t\t\t\t\t\t\t// hide post in ui\r\n\t\t\t\t\t\t\t\t\tif(id == '#hide-post') {\r\n\t\t\t\t\t\t\t\t\t\t$post.addClass('--status-hidden');\r\n\t\t\t\t\t\t\t\t\t} else if(id == '#unhide-post') {\r\n\t\t\t\t\t\t\t\t\t\t$post.removeClass('--status-hidden');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\t\t\t\talert('error performing this action');\r\n\t\t\t\t\t\t\t\t\t// rebind event\r\n\t\t\t\t\t\t\t\t\t$('.dialog').find('.confirm-action').one('click', callback);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t$('.dialog').find('.confirm-action').data('action-url', action).one('click', callback);\r\n\t\t\t\t\t}]);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * tagger.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for tagger objects\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'socialtagger',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar options = this.options;\r\n\t\t\tvar $input = $(this.element);\r\n\r\n\t\t\t// fallback to 'tagger-url' attribute\r\n\t\t\tif(options.url == undefined) {\r\n\t\t\t\toptions.url = $input.data('tagger-url');\r\n\t\t\t}\r\n\t\t\tif(options.url == undefined || options.url.length == 0) {\r\n\t\t\t\tconsole.log('tagger: could not resolve fetch URL');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// tagging suggestions\r\n\t\t\t$input.on('keyup', function(e) {\r\n\t\t\t\tvar value = $input.realVal();\r\n\t\t\t\tvar info = getCaretInfo();\r\n\t\t\t\tvar caret  = info.startPos;\r\n\t\t\t\tvar parent = info.parent;\r\n\t\t\t\tvar node   = info.node;\r\n\r\n\t\t\t\t// get between start of string and caret\r\n\t\t\t\t//var before = value.substr(0, caret);\r\n\t\t\t\tvar before = node.data.substr(0, caret);\r\n\r\n\t\t\t\t// get last '@' in this substring\r\n\t\t\t\tvar tagStart = before.lastIndexOf('@');\r\n\t\t\t\tvar term = before.substr(tagStart + 1, caret - tagStart);\r\n\t\t\t\tvar isNewline = (term.indexOf(\"\\n\") != -1 || term.indexOf(\"\\r\") != -1);\r\n\r\n\t\t\t\t// checkpoint:\r\n\t\t\t\t// - @ present before caret\r\n\t\t\t\t// - no new line character between @ and caret\r\n\t\t\t\t// - at least 1 character in term\r\n\t\t\t\tif(isNewline || term.length == 0 || tagStart == -1) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// nullify throttle\r\n\t\t\t\tif($input.data('throttle')) {\r\n\t\t\t\t\tclearTimeout($input.data('throttle'));\r\n\t\t\t\t\t$input.data('throttle', null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// start new throttle\r\n\t\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t\tvar url = options.url;\r\n\r\n\t\t\t\t\t// ajax\r\n\t\t\t\t\t$.ajax(url, {\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tterm: term\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\t\toptions.callback.apply($input, [json]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 250);\r\n\r\n\t\t\t\t// keep track\r\n\t\t\t\t$input.data('throttle', t);\r\n\t\t\t});\r\n\r\n\t\t\t$input.on('keyup keydown keypress click paste undo input change', function(e) {\r\n\t\t\t\tvar info = getCaretInfo();\r\n\t\t\t\t$input.data('caret-info', info);\r\n\t\t\t\t$input.data('caret-node', info.node);\r\n\t\t\t\t$input.data('caret-start', info.startPos);\r\n\t\t\t});\r\n\r\n\t\t\t// selecting suggestion\r\n\t\t\t$input.parents('.tagger').on('click', '.suggestion', function(e) {\r\n\t\t\t\tvar $item = $(this);\r\n\r\n\t\t\t\t// get information and value of current text node\r\n\t\t\t\tvar caret = $input.data('caret-start');\r\n\t\t\t\tvar node  = $input.data('caret-node');\r\n\t\t\t\tvar value = node.data;\r\n\r\n\t\t\t\t// get between start of string and caret\r\n\t\t\t\tvar before = value.substr(0, caret);\r\n\r\n\t\t\t\t// get last '@' in this substring\r\n\t\t\t\tvar tagStart = before.lastIndexOf('@');\r\n\r\n\t\t\t\t// split string into 3 parts, replace second part, then join\r\n\t\t\t\tvar first = value.substr(0, tagStart); // text in text node leading up to @\r\n\t\t\t\tvar third = value.substr(caret); // text in text node after tag injection\r\n\t\t\t\tvar render = function(data) {\r\n\t\t\t\t\tvar shortMap = {\r\n\t\t\t\t\t\tfacebook:  'fb',\r\n\t\t\t\t\t\ttwitter:   'tw',\r\n\t\t\t\t\t\tlinkedin:  'li',\r\n\t\t\t\t\t\tpinterest: 'pi',\r\n\t\t\t\t\t\tyoutube:   'yt',\r\n\t\t\t\t\t\tinstagram: 'ig'\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar short = shortMap[data.platform];\r\n\t\t\t\t\treturn '<span class=\"o_ ot_ ofa_ a_ ' + short + '_\" data-id=\"' + htmlEntities(data.profileId) + '\" data-text=\"' + htmlEntities(data.displayName) + '\" data-value=\"[@' + short + ':' + data.profileId + ']\">' + htmlEntities(data.displayName) + '</span>';\r\n\t\t\t\t};\r\n\t\t\t\tvar insertHtml = render($item.data());\r\n\r\n\t\t\t\t// get final value\r\n\t\t\t\tvalue = first + insertHtml + third;\r\n\r\n\t\t\t\t// get new caret position\r\n\t\t\t\tcaret = (first + insertHtml).length;\r\n\r\n\t\t\t\t// set value\r\n\t\t\t\t// we'll wrap the text node to achieve html injection (node.data assignment won't work as it's plain text)\r\n\t\t\t\tvar $wrap = $(node).wrap('<b>').parent();\r\n\t\t\t\t$wrap.replaceWith(value + '&nbsp;'); // replace entire element\r\n\t\t\t\tvar $o = $input.find('.o_.a_'); // a_ is used to paint the new tag, so we can easily select it\r\n\t\t\t\tvar c = $o.parent().contents();\r\n\t\t\t\tvar index = $(c).index($o) + 1; // text node to focus is 1 ahead of the injected tag\r\n\t\t\t\tnode = $o.parent().contents()[index];\r\n\t\t\t\t$o.removeClass('a_');\r\n\r\n\t\t\t\t// set caret to next text node after injected element\r\n\t\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t\tfocusTextNode($(node));\r\n\t\t\t\t}, 1);\r\n\t\t\t});\r\n\r\n\t\t\t$(document).click(function() {\r\n\t\t\t\t$input.parents('.tagger').find('.tagger__results').remove();\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * tagger.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for tagger objects\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'tagger',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar options = this.options;\r\n\t\t\tvar $input = $(this.element);\r\n\r\n\t\t\t// fallback to 'tagger-url' attribute\r\n\t\t\tif(options.url == undefined) {\r\n\t\t\t\toptions.url = $input.data('tagger-url');\r\n\t\t\t}\r\n\t\t\tif(options.url == undefined || options.url.length == 0) {\r\n\t\t\t\tconsole.log('tagger: could not resolve fetch URL');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// tagging suggestions\r\n\t\t\t$input.on('keyup', function(e) {\r\n\t\t\t\tvar value = $input.val();\r\n\t\t\t\tvar caret = this.selectionStart;\r\n\r\n\t\t\t\t// get between start of string and caret\r\n\t\t\t\tvar before = value.substr(0, caret);\r\n\r\n\t\t\t\t// get last '@' in this substring\r\n\t\t\t\tvar tagStart = before.lastIndexOf('@');\r\n\t\t\t\tvar term = before.substr(tagStart + 1);\r\n\t\t\t\tvar isNewline = (term.indexOf(\"\\n\") != -1 || term.indexOf(\"\\r\") != -1);\r\n\r\n\t\t\t\t// checkpoint:\r\n\t\t\t\t// - @ present before caret\r\n\t\t\t\t// - no new line character between @ and caret\r\n\t\t\t\t// - at least 1 character in term\r\n\t\t\t\tif(isNewline || term.length == 0 || tagStart == -1) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// nullify throttle\r\n\t\t\t\tif($input.data('throttle')) {\r\n\t\t\t\t\tclearTimeout($input.data('throttle'));\r\n\t\t\t\t\t$input.data('throttle', null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// start new throttle\r\n\t\t\t\tvar t = setTimeout(function() {\r\n\t\t\t\t\tvar url = options.url;\r\n\r\n\t\t\t\t\t// ajax\r\n\t\t\t\t\t$.ajax(url, {\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tterm: term\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\t\tvar $list = $input.parents('.tagger').find('.tagger__results');\r\n\t\t\t\t\t\t\t$list.addClass('--active');\r\n\t\t\t\t\t\t\t$list.find('li:not(.--template)').remove();\r\n\t\t\t\t\t\t\tfor(var i in json.entities) {\r\n\t\t\t\t\t\t\t\tvar $template = $list.find('li.--template').clone();\r\n\t\t\t\t\t\t\t\tvar entity = json.entities[i];\r\n\t\t\t\t\t\t\t\t$template.removeClass('--template');\r\n\t\t\t\t\t\t\t\t$template.data('id', entity.id);\r\n\t\t\t\t\t\t\t\t$template.data('slug', entity.slug);\r\n\t\t\t\t\t\t\t\t//$template.find('.entity__icon').attr('src', entity.profile_picture_tiny);\r\n\t\t\t\t\t\t\t\t$template.find('.entity__icon').attr('src', entity.profile_picture_small);\r\n\t\t\t\t\t\t\t\t$template.find('label').text(entity.name);\r\n\t\t\t\t\t\t\t\t$list.append($template);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 250);\r\n\r\n\t\t\t\t// keep track\r\n\t\t\t\t$input.data('throttle', t);\r\n\t\t\t});\r\n\r\n\t\t\t$input.on('blur', function() {\r\n\t\t\t\t$input.data('caret-start', this.selectionStart);\r\n\t\t\t});\r\n\r\n\t\t\t// selecting suggestion\r\n\t\t\t$input.parents('.tagger').find('.tagger__results').on('click', '.entity', function(e) {\r\n\t\t\t\tvar value = $input.val();\r\n\t\t\t\tvar slug = $(this).data('slug');\r\n\r\n\t\t\t\tvar caret = $input.data('caret-start');\r\n\r\n\t\t\t\t// get between start of string and caret\r\n\t\t\t\tvar before = value.substr(0, caret);\r\n\r\n\t\t\t\t// get last '@' in this substring\r\n\t\t\t\tvar tagStart = before.lastIndexOf('@');\r\n\r\n\t\t\t\t// split string into 3 parts, replace second part, then join\r\n\t\t\t\tvar first = value.substr(0, tagStart + 1);\r\n\t\t\t\tvar term = before.substr(tagStart + 1);\r\n\t\t\t\tvar third = value.substr(caret);\r\n\r\n\t\t\t\t// get final value\r\n\t\t\t\tvalue = first + slug + third;\r\n\r\n\t\t\t\t// get new caret position\r\n\t\t\t\tcaret = (first + slug).length;\r\n\r\n\t\t\t\t// set value and caret\r\n\t\t\t\t$input.val(value);\r\n\t\t\t\tplugin.setCaretPosition($input.get(0), caret);\r\n\t\t\t});\r\n\r\n\t\t\t$(document).click(function() {\r\n\t\t\t\t$input.parents('.tagger').find('.tagger__results').removeClass('--active');\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tsetCaretPosition: function(elem, caretPos) {\r\n\t\t\tvar range;\r\n\r\n\t\t\tif (elem.createTextRange) {\r\n\t\t\t\trange = elem.createTextRange();\r\n\t\t\t\trange.move('character', caretPos);\r\n\t\t\t\trange.select();\r\n\t\t\t} else {\r\n\t\t\t\telem.focus();\r\n\t\t\t\tif (elem.selectionStart !== undefined) {\r\n\t\t\t\t\telem.setSelectionRange(caretPos, caretPos);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * twitter.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for pinterest\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'twitter',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\t$(this.element).data('platform', pluginName);\r\n\t\t},\r\n\r\n\t\tvalidate: function(image, message, attachment, social) {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar fullMessage = plugin.getMessageFromParams(image, message, attachment, social);\r\n\r\n\t\t\t// get max character count based on criteria:\r\n\t\t\t// - subtract 24 characters if attachments present\r\n\t\t\t// - subtract 3 characters if links present\r\n\t\t\tvar charCount = 140;\r\n\t\t\tif(image !== undefined && attachment !== undefined && (attachment.type == 'image' || attachment.type == 'video')) {\r\n\t\t\t\t//charCount -= 24; // SP: Commented out as part of changing Twitter's policy for media uploads to its platform\r\n\t\t\t}\r\n\t\t\tif(message.indexOf('http://') != -1 || message.indexOf('https://') != -1) {\r\n\t\t\t\t//charCount -= 3; // SP: Commented out as part of changing Twitter's policy for media uploads to its platform\r\n\t\t\t}\r\n\r\n\t\t\t// if gone over, show error dialog\r\n\t\t\tif(fullMessage.length > charCount) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\terror: 'Twitter character count breached',\r\n\t\t\t\t\tdialog: 'twitter-correct-post',\r\n\t\t\t\t\tcallback: function($dialog, $trigger, image, message, attachment, social) {\r\n\r\n\t\t\t\t\t\t// store trigger\r\n\t\t\t\t\t\t$('.dialog').data('twitter-post-trigger', $trigger);\r\n\r\n\t\t\t\t\t\t// populate textarea\r\n\t\t\t\t\t\tvar fullMessage = plugin.getMessageFromParams(image, message, attachment, social);\r\n\t\t\t\t\t\t$dialog.find('textarea').val(fullMessage);\r\n\r\n\t\t\t\t\t\t// set character count\r\n\t\t\t\t\t\t$('.dialog').data('twitter-max-length', charCount);\r\n\r\n\t\t\t\t\t\t// toggle submit\r\n\t\t\t\t\t\t$dialog.find('.confirm-selection').addClass('--disabled');\r\n\r\n\t\t\t\t\t\t// below here will only trigger once\r\n\t\t\t\t\t\tvar $content = $('#twitter-correct-post');\r\n\t\t\t\t\t\tif($content.data('initialised')) {\r\n\t\t\t\t\t\t\t// update character counter\r\n\t\t\t\t\t\t\t$('.dialog').find('#textarea_message_write_tw').trigger('input');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$content.data('initialised', true);\r\n\r\n\t\t\t\t\t\t// updating twitter post\r\n\t\t\t\t\t\t$('.dialog').on('click', '.confirm-selection', function(e) {\r\n\t\t\t\t\t\t\tif($(this).parents('.dialog').find('#textarea_message_write_tw').length == 0) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar $input = $('<input name=\"social[twitter][message]\" type=\"hidden\" />');\r\n\t\t\t\t\t\t\t$input.val($('.dialog').find('textarea').val());\r\n\t\t\t\t\t\t\tvar $trigger = $('.dialog').data('twitter-post-trigger');\r\n\t\t\t\t\t\t\t$trigger.find('input[name=social\\\\[twitter\\\\]\\\\[message\\\\]]').remove();\r\n\t\t\t\t\t\t\t$trigger.append($input);\r\n\t\t\t\t\t\t\t$trigger.trigger('select');\r\n\r\n\t\t\t\t\t\t\t// submit form again to chain validation or submit\r\n\t\t\t\t\t\t\tvar $button = $trigger.parents('form').find('.button[type=submit]');\r\n\t\t\t\t\t\t\tif($button.length) {\r\n\t\t\t\t\t\t\t\t$button.trigger('click');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$trigger.parents('form').trigger('submit');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// checking character count\r\n\t\t\t\t\t\t$('.dialog').on('input change blur', '#textarea_message_write_tw', function(e) {\r\n\t\t\t\t\t\t\tvar message = $(this).val();\r\n\t\t\t\t\t\t\tvar counter = $('.dialog').data('twitter-max-length') || 140;\r\n\t\t\t\t\t\t\t$('.dialog').find('.confirm-selection').toggleClass('--disabled', message.length > counter);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// init character counter\r\n\t\t\t\t\t\t$dialog.find('.character-counter').characterCounter();\r\n\t\t\t\t\t\t$dialog.find('.character-counter').data('plugin_characterCounter').refresh();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetMessageFromParams: function(image, message, attachment, social) {\r\n\t\t\tvar appendedAttachment = '';\r\n\t\t\tvar fullMessage = message;\r\n\t\t\tif(social == undefined) {\r\n\t\t\t\tif(attachment !== undefined && ((attachment.url !== undefined && message.indexOf(attachment.url) === -1) || (attachment.shortened_url !== undefined && message.indexOf(attachment.shortened_url) === -1))) {\r\n\t\t\t\t\tfullMessage = fullMessage.replace(' ' + attachment.url, '').replace(attachment.url, '');\r\n\t\t\t\t\tappendedAttachment = attachment.shortened_url || '';\r\n\t\t\t\t\tappendedAttachment = appendedAttachment.length == 0 ? attachment.url : appendedAttachment;\r\n\t\t\t\t\tfullMessage += ' ' + appendedAttachment;\r\n\t\t\t\t}\r\n\t\t\t\telse if(image !== undefined && message.indexOf(image) === -1) {\r\n\t\t\t\t\t//fullMessage += ' ' + image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfullMessage = social.message;\r\n\t\t\t}\r\n\t\t\treturn fullMessage;\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);","/**\r\n * youtube.js\r\n */\r\n\r\n//https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n/*!\r\n * jQuery lightweight plugin boilerplate\r\n * Original author: @ajpiano\r\n * Further changes, comments: @addyosmani\r\n * Licensed under the MIT license\r\n */\r\n/**\r\n * Plugin for youtube\r\n */\r\n;(function($, window, document, undefined) {\r\n\r\n\t// Create the defaults once\r\n\tvar pluginName = 'youtube',\r\n\t\tdefaults = {\r\n\t\t};\r\n\r\n\t// The actual plugin constructor\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t// merge options\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tPlugin.prototype = {\r\n\r\n\t\t// Place initialization logic in here\r\n\t\tinit: function() {\r\n\t\t\t$(this.element).data('platform', pluginName);\r\n\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\t// activate\r\n\t\t\t$(this.element).on('click', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// mark as loading to ensure it doesn't load twice\r\n\t\t\t\tvar loading = $(plugin.element).data('youtube-loading');\r\n\t\t\t\tif(loading === true) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$(plugin.element).data('youtube-loading', true);\r\n\r\n\t\t\t\t// submit form\r\n\t\t\t\tplugin.showOptions();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tshowOptions: function() {\r\n\t\t\tvar plugin = this;\r\n\t\t\tvar element = this.element;\r\n\r\n\t\t\t// get dialog object, we'll open this later\r\n\t\t\tvar $dialog = $('#' + $(this.element).data('dialog-content'));\r\n\t\t\tif($dialog.data('loaded')) {\r\n\t\t\t\t$(plugin.element).data('youtube-loading', false);\r\n\t\t\t\tplugin.initDialog($dialog, element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// ajax to return youtube options\r\n\t\t\tif($(this.element).data('get-youtube-categories').length) {\r\n\t\t\t\t$.ajax($(this.element).data('get-youtube-categories'), {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tsuccess: function(json) {\r\n\t\t\t\t\t\tif(json.categories == undefined) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// mark dialog as loaded\r\n\t\t\t\t\t\t// this should throttle back future api requests\r\n\t\t\t\t\t\t$dialog.data('loaded', true);\r\n\r\n\t\t\t\t\t\t// populate categories\r\n\t\t\t\t\t\tvar $list = $dialog.find('#social_youtube_category');\r\n\t\t\t\t\t\t$list.empty();\r\n\t\t\t\t\t\tfor(var v in json.categories) {\r\n\t\t\t\t\t\t\tvar text = json.categories[v];\r\n\t\t\t\t\t\t\t$list.append('<option value=\"' + v + '\">' + text + '</option>');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tplugin.initDialog($dialog, element);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcomplete: function() {\r\n\t\t\t\t\t\t// mark as loading to ensure it doesn't load twice\r\n\t\t\t\t\t\t$(plugin.element).data('youtube-loading', false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitDialog: function($dialog, element) {\r\n\r\n\t\t\t// show dialog\r\n\t\t\t$('.dialog').trigger('show', [$dialog]);\r\n\t\t\t$('.dialog').data('youtube-categories-trigger', $(element));\r\n\r\n\t\t\tif($dialog.data('initialised')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t$dialog.data('initialised', true);\r\n\r\n\t\t\t// selecting options\r\n\t\t\t$('.dialog').on('click', '.confirm-selection', function(e) {\r\n\t\t\t\tvar $trigger = $('.dialog').data('youtube-categories-trigger');\r\n\t\t\t\tvar $name     = $('<input type=\"hidden\" name=\"social[youtube][title]\" />').val($('.dialog').find('input[name=social\\\\[youtube\\\\]\\\\[title\\\\]]').val());\r\n\t\t\t\tvar $category = $('<input type=\"hidden\" name=\"social[youtube][category]\" />').val($('.dialog').find('select[name=social\\\\[youtube\\\\]\\\\[category\\\\]]').val());\r\n\t\t\t\t$trigger.find('input[name=social\\\\[youtube\\\\]\\\\[name\\\\]]').remove();\r\n\t\t\t\t$trigger.find('input[name=social\\\\[youtube\\\\]\\\\[category\\\\]]').remove();\r\n\t\t\t\t$trigger.append($name);\r\n\t\t\t\t$trigger.append($category);\r\n\t\t\t\t$trigger.trigger('select');\r\n\t\t\t});\r\n\r\n\t\t\t// cancel\r\n\t\t\t$('.dialog').on('click', '.cancel-selection', function(e) {\r\n\t\t\t\tvar $trigger = $('.dialog').data('youtube-categories-trigger');\r\n\t\t\t\t$trigger.find('input[name=social\\\\[youtube\\\\]\\\\[title\\\\]]').remove();\r\n\t\t\t\t$trigger.find('input[name=social\\\\[youtube\\\\]\\\\[category\\\\]]').remove();\r\n\t\t\t\t$trigger.trigger('deselect');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(options) {\r\n\t\treturn this.each(function() {\r\n\t\t\tif(!$.data(this, 'plugin_' + pluginName)) {\r\n\t\t\t\t$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);"]}